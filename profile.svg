<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="586" onload="init(evt)" viewBox="0 0 1200 586" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="586" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">py-spy record -o profile.svg -- /Users/jea20/git/pyPMT/.venv/bin/pypmtcli solve -e seqH2Prop --domain tests/planners/pddl/logistics/domain.pddl --problem tests/planners/pddl/logistics/problem.pddl --verbose 4</text><text id="details" fill="rgb(0,0,0)" x="10" y="40.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="575.00"> </text><svg id="frames" x="10" width="1180" total_samples="145422"><g><title>user_prop_fixed (z3/z3.py:11625) (402 samples, 0.28%)</title><rect x="0.8747%" y="196" width="0.2764%" height="15" fill="rgb(227,0,7)" fg:x="1272" fg:w="402"/><text x="1.1247%" y="206.50"></text></g><g><title>user_prop_fixed (z3/z3.py:11626) (315 samples, 0.22%)</title><rect x="1.1511%" y="196" width="0.2166%" height="15" fill="rgb(217,0,24)" fg:x="1674" fg:w="315"/><text x="1.4011%" y="206.50"></text></g><g><title>__bool__ (z3/z3.py:374) (155 samples, 0.11%)</title><rect x="1.4118%" y="244" width="0.1066%" height="15" fill="rgb(221,193,54)" fg:x="2053" fg:w="155"/><text x="1.6618%" y="254.50"></text></g><g><title>is_true (z3/z3.py:1651) (153 samples, 0.11%)</title><rect x="1.4131%" y="260" width="0.1052%" height="15" fill="rgb(248,212,6)" fg:x="2055" fg:w="153"/><text x="1.6631%" y="270.50"></text></g><g><title>is_app_of (z3/z3.py:1403) (153 samples, 0.11%)</title><rect x="1.4131%" y="276" width="0.1052%" height="15" fill="rgb(208,68,35)" fg:x="2055" fg:w="153"/><text x="1.6631%" y="286.50"></text></g><g><title>__bool__ (z3/z3.py:378) (199 samples, 0.14%)</title><rect x="1.5954%" y="244" width="0.1368%" height="15" fill="rgb(232,128,0)" fg:x="2320" fg:w="199"/><text x="1.8454%" y="254.50"></text></g><g><title>arg (z3/z3.py:1117) (147 samples, 0.10%)</title><rect x="1.8285%" y="260" width="0.1011%" height="15" fill="rgb(207,160,47)" fg:x="2659" fg:w="147"/><text x="2.0785%" y="270.50"></text></g><g><title>arg (z3/z3.py:1118) (304 samples, 0.21%)</title><rect x="1.9296%" y="260" width="0.2090%" height="15" fill="rgb(228,23,34)" fg:x="2806" fg:w="304"/><text x="2.1796%" y="270.50"></text></g><g><title>__bool__ (z3/z3.py:379) (617 samples, 0.42%)</title><rect x="1.7322%" y="244" width="0.4243%" height="15" fill="rgb(218,30,26)" fg:x="2519" fg:w="617"/><text x="1.9822%" y="254.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1242) (238 samples, 0.16%)</title><rect x="2.3332%" y="260" width="0.1637%" height="15" fill="rgb(220,122,19)" fg:x="3393" fg:w="238"/><text x="2.5832%" y="270.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1243) (268 samples, 0.18%)</title><rect x="2.4969%" y="260" width="0.1843%" height="15" fill="rgb(250,228,42)" fg:x="3631" fg:w="268"/><text x="2.7469%" y="270.50"></text></g><g><title>cast (z3/z3.py:1561) (262 samples, 0.18%)</title><rect x="2.5010%" y="276" width="0.1802%" height="15" fill="rgb(240,193,28)" fg:x="3637" fg:w="262"/><text x="2.7510%" y="286.50"></text></g><g><title>_coerce_exprs (z3/z3.py:1244) (217 samples, 0.15%)</title><rect x="2.6812%" y="260" width="0.1492%" height="15" fill="rgb(216,20,37)" fg:x="3899" fg:w="217"/><text x="2.9312%" y="270.50"></text></g><g><title>cast (z3/z3.py:1561) (207 samples, 0.14%)</title><rect x="2.6880%" y="276" width="0.1423%" height="15" fill="rgb(206,188,39)" fg:x="3909" fg:w="207"/><text x="2.9380%" y="286.50"></text></g><g><title>__eq__ (z3/z3.py:1033) (901 samples, 0.62%)</title><rect x="2.2115%" y="244" width="0.6196%" height="15" fill="rgb(217,207,13)" fg:x="3216" fg:w="901"/><text x="2.4615%" y="254.50"></text></g><g><title>__eq__ (z3/z3.py:1034) (148 samples, 0.10%)</title><rect x="2.8311%" y="244" width="0.1018%" height="15" fill="rgb(231,73,38)" fg:x="4117" fg:w="148"/><text x="3.0811%" y="254.50"></text></g><g><title>pp_app (z3/z3printer.py:1146) (215 samples, 0.15%)</title><rect x="3.1845%" y="340" width="0.1478%" height="15" fill="rgb(225,20,46)" fg:x="4631" fg:w="215"/><text x="3.4345%" y="350.50"></text></g><g><title>is_const (z3/z3.py:1332) (214 samples, 0.15%)</title><rect x="3.1852%" y="356" width="0.1472%" height="15" fill="rgb(210,31,41)" fg:x="4632" fg:w="214"/><text x="3.4352%" y="366.50"></text></g><g><title>decl (z3/z3.py:1074) (196 samples, 0.13%)</title><rect x="3.4589%" y="372" width="0.1348%" height="15" fill="rgb(221,200,47)" fg:x="5030" fg:w="196"/><text x="3.7089%" y="382.50"></text></g><g><title>pp_const (z3/z3printer.py:767) (410 samples, 0.28%)</title><rect x="3.3365%" y="356" width="0.2819%" height="15" fill="rgb(226,26,5)" fg:x="4852" fg:w="410"/><text x="3.5865%" y="366.50"></text></g><g><title>_op_name (z3/z3printer.py:353) (244 samples, 0.17%)</title><rect x="3.6810%" y="388" width="0.1678%" height="15" fill="rgb(249,33,26)" fg:x="5353" fg:w="244"/><text x="3.9310%" y="398.50"></text></g><g><title>decl (z3/z3.py:1074) (146 samples, 0.10%)</title><rect x="3.7484%" y="404" width="0.1004%" height="15" fill="rgb(235,183,28)" fg:x="5451" fg:w="146"/><text x="3.9984%" y="414.50"></text></g><g><title>_op_name (z3/z3printer.py:357) (167 samples, 0.11%)</title><rect x="3.8708%" y="388" width="0.1148%" height="15" fill="rgb(221,5,38)" fg:x="5629" fg:w="167"/><text x="4.1208%" y="398.50"></text></g><g><title>name (z3/z3.py:766) (164 samples, 0.11%)</title><rect x="3.8729%" y="404" width="0.1128%" height="15" fill="rgb(247,18,42)" fg:x="5632" fg:w="164"/><text x="4.1229%" y="414.50"></text></g><g><title>__call__ (z3/z3printer.py:1346) (1,403 samples, 0.96%)</title><rect x="3.0346%" y="292" width="0.9648%" height="15" fill="rgb(241,131,45)" fg:x="4413" fg:w="1403"/><text x="3.2846%" y="302.50"></text></g><g><title>main (z3/z3printer.py:1320) (1,394 samples, 0.96%)</title><rect x="3.0408%" y="308" width="0.9586%" height="15" fill="rgb(249,31,29)" fg:x="4422" fg:w="1394"/><text x="3.2908%" y="318.50"></text></g><g><title>pp_expr (z3/z3printer.py:1217) (1,282 samples, 0.88%)</title><rect x="3.1178%" y="324" width="0.8816%" height="15" fill="rgb(225,111,53)" fg:x="4534" fg:w="1282"/><text x="3.3678%" y="334.50"></text></g><g><title>pp_app (z3/z3printer.py:1147) (970 samples, 0.67%)</title><rect x="3.3324%" y="340" width="0.6670%" height="15" fill="rgb(238,160,17)" fg:x="4846" fg:w="970"/><text x="3.5824%" y="350.50"></text></g><g><title>pp_const (z3/z3printer.py:776) (545 samples, 0.37%)</title><rect x="3.6246%" y="356" width="0.3748%" height="15" fill="rgb(214,148,48)" fg:x="5271" fg:w="545"/><text x="3.8746%" y="366.50"></text></g><g><title>pp_name (z3/z3printer.py:728) (541 samples, 0.37%)</title><rect x="3.6274%" y="372" width="0.3720%" height="15" fill="rgb(232,36,49)" fg:x="5275" fg:w="541"/><text x="3.8774%" y="382.50"></text></g><g><title>obj_to_string (z3/z3printer.py:1455) (1,484 samples, 1.02%)</title><rect x="3.0243%" y="276" width="1.0205%" height="15" fill="rgb(209,103,24)" fg:x="4398" fg:w="1484"/><text x="3.2743%" y="286.50"></text></g><g><title>var_components (pyPMT/pypmt/encoders/utilities.py:38) (1,521 samples, 1.05%)</title><rect x="3.0002%" y="244" width="1.0459%" height="15" fill="rgb(229,88,8)" fg:x="4363" fg:w="1521"/><text x="3.2502%" y="254.50"></text></g><g><title>__str__ (z3/z3.py:359) (1,510 samples, 1.04%)</title><rect x="3.0078%" y="260" width="1.0384%" height="15" fill="rgb(213,181,19)" fg:x="4374" fg:w="1510"/><text x="3.2578%" y="270.50"></text></g><g><title>_fixed (h2propagator.py:122) (3,902 samples, 2.68%)</title><rect x="1.3774%" y="228" width="2.6832%" height="15" fill="rgb(254,191,54)" fg:x="2003" fg:w="3902"/><text x="1.6274%" y="238.50">_f..</text></g><g><title>__bool__ (z3/z3.py:374) (527 samples, 0.36%)</title><rect x="4.1129%" y="308" width="0.3624%" height="15" fill="rgb(241,83,37)" fg:x="5981" fg:w="527"/><text x="4.3629%" y="318.50"></text></g><g><title>is_true (z3/z3.py:1651) (519 samples, 0.36%)</title><rect x="4.1184%" y="324" width="0.3569%" height="15" fill="rgb(233,36,39)" fg:x="5989" fg:w="519"/><text x="4.3684%" y="334.50"></text></g><g><title>is_app_of (z3/z3.py:1403) (507 samples, 0.35%)</title><rect x="4.1266%" y="340" width="0.3486%" height="15" fill="rgb(226,3,54)" fg:x="6001" fg:w="507"/><text x="4.3766%" y="350.50"></text></g><g><title>kind (z3/z3.py:1080) (195 samples, 0.13%)</title><rect x="4.3412%" y="356" width="0.1341%" height="15" fill="rgb(245,192,40)" fg:x="6313" fg:w="195"/><text x="4.5912%" y="366.50"></text></g><g><title>compute_hm_ (h2propagator.py:183) (909 samples, 0.63%)</title><rect x="4.0991%" y="276" width="0.6251%" height="15" fill="rgb(238,167,29)" fg:x="5961" fg:w="909"/><text x="4.3491%" y="286.50"></text></g><g><title>&lt;listcomp&gt; (h2propagator.py:183) (906 samples, 0.62%)</title><rect x="4.1012%" y="292" width="0.6230%" height="15" fill="rgb(232,182,51)" fg:x="5964" fg:w="906"/><text x="4.3512%" y="302.50"></text></g><g><title>__bool__ (z3/z3.py:376) (362 samples, 0.25%)</title><rect x="4.4753%" y="308" width="0.2489%" height="15" fill="rgb(231,60,39)" fg:x="6508" fg:w="362"/><text x="4.7253%" y="318.50"></text></g><g><title>is_false (z3/z3.py:1665) (358 samples, 0.25%)</title><rect x="4.4780%" y="324" width="0.2462%" height="15" fill="rgb(208,69,12)" fg:x="6512" fg:w="358"/><text x="4.7280%" y="334.50"></text></g><g><title>is_app_of (z3/z3.py:1403) (349 samples, 0.24%)</title><rect x="4.4842%" y="340" width="0.2400%" height="15" fill="rgb(235,93,37)" fg:x="6521" fg:w="349"/><text x="4.7342%" y="350.50"></text></g><g><title>kind (z3/z3.py:1080) (146 samples, 0.10%)</title><rect x="4.6238%" y="356" width="0.1004%" height="15" fill="rgb(213,116,39)" fg:x="6724" fg:w="146"/><text x="4.8738%" y="366.50"></text></g><g><title>Z3_get_ast_kind (z3/z3core.py:3121) (151 samples, 0.10%)</title><rect x="4.9215%" y="404" width="0.1038%" height="15" fill="rgb(222,207,29)" fg:x="7157" fg:w="151"/><text x="5.1715%" y="414.50"></text></g><g><title>is_app (z3/z3.py:1312) (360 samples, 0.25%)</title><rect x="4.8459%" y="372" width="0.2476%" height="15" fill="rgb(206,96,30)" fg:x="7047" fg:w="360"/><text x="5.0959%" y="382.50"></text></g><g><title>_ast_kind (z3/z3.py:494) (284 samples, 0.20%)</title><rect x="4.8982%" y="388" width="0.1953%" height="15" fill="rgb(218,138,4)" fg:x="7123" fg:w="284"/><text x="5.1482%" y="398.50"></text></g><g><title>is_app (z3/z3.py:1312) (331 samples, 0.23%)</title><rect x="5.1375%" y="388" width="0.2276%" height="15" fill="rgb(250,191,14)" fg:x="7471" fg:w="331"/><text x="5.3875%" y="398.50"></text></g><g><title>_ast_kind (z3/z3.py:494) (252 samples, 0.17%)</title><rect x="5.1918%" y="404" width="0.1733%" height="15" fill="rgb(239,60,40)" fg:x="7550" fg:w="252"/><text x="5.4418%" y="414.50"></text></g><g><title>kind (z3/z3.py:1079) (380 samples, 0.26%)</title><rect x="5.1106%" y="372" width="0.2613%" height="15" fill="rgb(206,27,48)" fg:x="7432" fg:w="380"/><text x="5.3606%" y="382.50"></text></g><g><title>__bool__ (z3/z3.py:374) (1,428 samples, 0.98%)</title><rect x="4.7751%" y="324" width="0.9820%" height="15" fill="rgb(225,35,8)" fg:x="6944" fg:w="1428"/><text x="5.0251%" y="334.50"></text></g><g><title>is_true (z3/z3.py:1651) (1,402 samples, 0.96%)</title><rect x="4.7929%" y="340" width="0.9641%" height="15" fill="rgb(250,213,24)" fg:x="6970" fg:w="1402"/><text x="5.0429%" y="350.50"></text></g><g><title>is_app_of (z3/z3.py:1403) (1,384 samples, 0.95%)</title><rect x="4.8053%" y="356" width="0.9517%" height="15" fill="rgb(247,123,22)" fg:x="6988" fg:w="1384"/><text x="5.0553%" y="366.50"></text></g><g><title>kind (z3/z3.py:1080) (560 samples, 0.39%)</title><rect x="5.3720%" y="372" width="0.3851%" height="15" fill="rgb(231,138,38)" fg:x="7812" fg:w="560"/><text x="5.6220%" y="382.50"></text></g><g><title>is_app (z3/z3.py:1312) (270 samples, 0.19%)</title><rect x="5.8100%" y="372" width="0.1857%" height="15" fill="rgb(231,145,46)" fg:x="8449" fg:w="270"/><text x="6.0600%" y="382.50"></text></g><g><title>_ast_kind (z3/z3.py:494) (208 samples, 0.14%)</title><rect x="5.8526%" y="388" width="0.1430%" height="15" fill="rgb(251,118,11)" fg:x="8511" fg:w="208"/><text x="6.1026%" y="398.50"></text></g><g><title>is_app (z3/z3.py:1312) (255 samples, 0.18%)</title><rect x="6.0287%" y="388" width="0.1754%" height="15" fill="rgb(217,147,25)" fg:x="8767" fg:w="255"/><text x="6.2787%" y="398.50"></text></g><g><title>_ast_kind (z3/z3.py:494) (211 samples, 0.15%)</title><rect x="6.0589%" y="404" width="0.1451%" height="15" fill="rgb(247,81,37)" fg:x="8811" fg:w="211"/><text x="6.3089%" y="414.50"></text></g><g><title>kind (z3/z3.py:1079) (295 samples, 0.20%)</title><rect x="6.0067%" y="372" width="0.2029%" height="15" fill="rgb(209,12,38)" fg:x="8735" fg:w="295"/><text x="6.2567%" y="382.50"></text></g><g><title>__bool__ (z3/z3.py:376) (1,129 samples, 0.78%)</title><rect x="5.7577%" y="324" width="0.7764%" height="15" fill="rgb(227,1,9)" fg:x="8373" fg:w="1129"/><text x="6.0077%" y="334.50"></text></g><g><title>is_false (z3/z3.py:1665) (1,116 samples, 0.77%)</title><rect x="5.7667%" y="340" width="0.7674%" height="15" fill="rgb(248,47,43)" fg:x="8386" fg:w="1116"/><text x="6.0167%" y="350.50"></text></g><g><title>is_app_of (z3/z3.py:1403) (1,104 samples, 0.76%)</title><rect x="5.7749%" y="356" width="0.7592%" height="15" fill="rgb(221,10,30)" fg:x="8398" fg:w="1104"/><text x="6.0249%" y="366.50"></text></g><g><title>kind (z3/z3.py:1080) (472 samples, 0.32%)</title><rect x="6.2095%" y="372" width="0.3246%" height="15" fill="rgb(210,229,1)" fg:x="9030" fg:w="472"/><text x="6.4595%" y="382.50"></text></g><g><title>compute_hm_ (h2propagator.py:183) (2,625 samples, 1.81%)</title><rect x="4.7311%" y="292" width="1.8051%" height="15" fill="rgb(222,148,37)" fg:x="6880" fg:w="2625"/><text x="4.9811%" y="302.50">c..</text></g><g><title>&lt;listcomp&gt; (h2propagator.py:183) (2,621 samples, 1.80%)</title><rect x="4.7338%" y="308" width="1.8023%" height="15" fill="rgb(234,67,33)" fg:x="6884" fg:w="2621"/><text x="4.9838%" y="318.50">&lt;..</text></g><g><title>__hash__ (unified_planning/model/action.py:227) (149 samples, 0.10%)</title><rect x="6.8050%" y="308" width="0.1025%" height="15" fill="rgb(247,98,35)" fg:x="9896" fg:w="149"/><text x="7.0550%" y="318.50"></text></g><g><title>__hash__ (unified_planning/model/effect.py:134) (288 samples, 0.20%)</title><rect x="7.0663%" y="324" width="0.1980%" height="15" fill="rgb(247,138,52)" fg:x="10276" fg:w="288"/><text x="7.3163%" y="334.50"></text></g><g><title>__hash__ (unified_planning/model/effect.py:135) (186 samples, 0.13%)</title><rect x="7.2644%" y="324" width="0.1279%" height="15" fill="rgb(213,79,30)" fg:x="10564" fg:w="186"/><text x="7.5144%" y="334.50"></text></g><g><title>__hash__ (unified_planning/model/effect.py:136) (164 samples, 0.11%)</title><rect x="7.3923%" y="324" width="0.1128%" height="15" fill="rgb(246,177,23)" fg:x="10750" fg:w="164"/><text x="7.6423%" y="334.50"></text></g><g><title>__hash__ (unified_planning/model/effect.py:137) (223 samples, 0.15%)</title><rect x="7.5051%" y="324" width="0.1533%" height="15" fill="rgb(230,62,27)" fg:x="10914" fg:w="223"/><text x="7.7551%" y="334.50"></text></g><g><title>__hash__ (unified_planning/model/action.py:229) (1,486 samples, 1.02%)</title><rect x="6.9426%" y="308" width="1.0219%" height="15" fill="rgb(216,154,8)" fg:x="10096" fg:w="1486"/><text x="7.1926%" y="318.50"></text></g><g><title>__hash__ (unified_planning/model/effect.py:138) (445 samples, 0.31%)</title><rect x="7.6584%" y="324" width="0.3060%" height="15" fill="rgb(244,35,45)" fg:x="11137" fg:w="445"/><text x="7.9084%" y="334.50"></text></g><g><title>__hash__ (unified_planning/model/action.py:227) (183 samples, 0.13%)</title><rect x="8.2766%" y="324" width="0.1258%" height="15" fill="rgb(251,115,12)" fg:x="12036" fg:w="183"/><text x="8.5266%" y="334.50"></text></g><g><title>__hash__ (unified_planning/model/effect.py:134) (243 samples, 0.17%)</title><rect x="8.5771%" y="340" width="0.1671%" height="15" fill="rgb(240,54,50)" fg:x="12473" fg:w="243"/><text x="8.8271%" y="350.50"></text></g><g><title>__hash__ (unified_planning/model/effect.py:136) (165 samples, 0.11%)</title><rect x="8.8425%" y="340" width="0.1135%" height="15" fill="rgb(233,84,52)" fg:x="12859" fg:w="165"/><text x="9.0925%" y="350.50"></text></g><g><title>__hash__ (unified_planning/model/effect.py:137) (206 samples, 0.14%)</title><rect x="8.9560%" y="340" width="0.1417%" height="15" fill="rgb(207,117,47)" fg:x="13024" fg:w="206"/><text x="9.2060%" y="350.50"></text></g><g><title>__hash__ (unified_planning/model/action.py:229) (1,140 samples, 0.78%)</title><rect x="8.4444%" y="324" width="0.7839%" height="15" fill="rgb(249,43,39)" fg:x="12280" fg:w="1140"/><text x="8.6944%" y="334.50"></text></g><g><title>__hash__ (unified_planning/model/effect.py:138) (190 samples, 0.13%)</title><rect x="9.0977%" y="340" width="0.1307%" height="15" fill="rgb(209,38,44)" fg:x="13230" fg:w="190"/><text x="9.3477%" y="350.50"></text></g><g><title>regression (h2propagator.py:169) (2,026 samples, 1.39%)</title><rect x="8.0235%" y="308" width="1.3932%" height="15" fill="rgb(236,212,23)" fg:x="11668" fg:w="2026"/><text x="8.2735%" y="318.50"></text></g><g><title>regression (h2propagator.py:170) (368 samples, 0.25%)</title><rect x="9.4167%" y="308" width="0.2531%" height="15" fill="rgb(242,79,21)" fg:x="13694" fg:w="368"/><text x="9.6667%" y="318.50"></text></g><g><title>&lt;listcomp&gt; (h2propagator.py:170) (236 samples, 0.16%)</title><rect x="9.5075%" y="324" width="0.1623%" height="15" fill="rgb(211,96,35)" fg:x="13826" fg:w="236"/><text x="9.7575%" y="334.50"></text></g><g><title>regression (h2propagator.py:171) (165 samples, 0.11%)</title><rect x="9.6698%" y="308" width="0.1135%" height="15" fill="rgb(253,215,40)" fg:x="14062" fg:w="165"/><text x="9.9198%" y="318.50"></text></g><g><title>compute_hm_ (h2propagator.py:193) (4,726 samples, 3.25%)</title><rect x="6.5423%" y="292" width="3.2499%" height="15" fill="rgb(211,81,21)" fg:x="9514" fg:w="4726"/><text x="6.7923%" y="302.50">com..</text></g><g><title>Z3_get_ast_kind (z3/z3core.py:3121) (377 samples, 0.26%)</title><rect x="10.3547%" y="420" width="0.2592%" height="15" fill="rgb(208,190,38)" fg:x="15058" fg:w="377"/><text x="10.6047%" y="430.50"></text></g><g><title>Check (z3/z3core.py:1564) (240 samples, 0.17%)</title><rect x="10.6497%" y="436" width="0.1650%" height="15" fill="rgb(235,213,38)" fg:x="15487" fg:w="240"/><text x="10.8997%" y="446.50"></text></g><g><title>Z3_get_ast_kind (z3/z3core.py:3122) (328 samples, 0.23%)</title><rect x="10.6139%" y="420" width="0.2256%" height="15" fill="rgb(237,122,38)" fg:x="15435" fg:w="328"/><text x="10.8639%" y="430.50"></text></g><g><title>is_app (z3/z3.py:1312) (1,090 samples, 0.75%)</title><rect x="10.1113%" y="388" width="0.7495%" height="15" fill="rgb(244,218,35)" fg:x="14704" fg:w="1090"/><text x="10.3613%" y="398.50"></text></g><g><title>_ast_kind (z3/z3.py:494) (859 samples, 0.59%)</title><rect x="10.2701%" y="404" width="0.5907%" height="15" fill="rgb(240,68,47)" fg:x="14935" fg:w="859"/><text x="10.5201%" y="414.50"></text></g><g><title>Z3_get_ast_kind (z3/z3core.py:3121) (357 samples, 0.25%)</title><rect x="11.2617%" y="436" width="0.2455%" height="15" fill="rgb(210,16,53)" fg:x="16377" fg:w="357"/><text x="11.5117%" y="446.50"></text></g><g><title>Check (z3/z3core.py:1564) (237 samples, 0.16%)</title><rect x="11.5512%" y="452" width="0.1630%" height="15" fill="rgb(235,124,12)" fg:x="16798" fg:w="237"/><text x="11.8012%" y="462.50"></text></g><g><title>Z3_get_ast_kind (z3/z3core.py:3122) (333 samples, 0.23%)</title><rect x="11.5072%" y="436" width="0.2290%" height="15" fill="rgb(224,169,11)" fg:x="16734" fg:w="333"/><text x="11.7572%" y="446.50"></text></g><g><title>is_app (z3/z3.py:1312) (1,051 samples, 0.72%)</title><rect x="11.0293%" y="404" width="0.7227%" height="15" fill="rgb(250,166,2)" fg:x="16039" fg:w="1051"/><text x="11.2793%" y="414.50"></text></g><g><title>_ast_kind (z3/z3.py:494) (832 samples, 0.57%)</title><rect x="11.1799%" y="420" width="0.5721%" height="15" fill="rgb(242,216,29)" fg:x="16258" fg:w="832"/><text x="11.4299%" y="430.50"></text></g><g><title>kind (z3/z3.py:1079) (1,242 samples, 0.85%)</title><rect x="10.9330%" y="388" width="0.8541%" height="15" fill="rgb(230,116,27)" fg:x="15899" fg:w="1242"/><text x="11.1830%" y="398.50"></text></g><g><title>Z3_get_app_decl (z3/z3core.py:3076) (319 samples, 0.22%)</title><rect x="11.9707%" y="404" width="0.2194%" height="15" fill="rgb(228,99,48)" fg:x="17408" fg:w="319"/><text x="12.2207%" y="414.50"></text></g><g><title>Check (z3/z3core.py:1564) (226 samples, 0.16%)</title><rect x="12.2306%" y="420" width="0.1554%" height="15" fill="rgb(253,11,6)" fg:x="17786" fg:w="226"/><text x="12.4806%" y="430.50"></text></g><g><title>Z3_get_app_decl (z3/z3core.py:3077) (324 samples, 0.22%)</title><rect x="12.1900%" y="404" width="0.2228%" height="15" fill="rgb(247,143,39)" fg:x="17727" fg:w="324"/><text x="12.4400%" y="414.50"></text></g><g><title>Z3_get_decl_kind (z3/z3core.py:2996) (301 samples, 0.21%)</title><rect x="12.4177%" y="404" width="0.2070%" height="15" fill="rgb(236,97,10)" fg:x="18058" fg:w="301"/><text x="12.6677%" y="414.50"></text></g><g><title>Check (z3/z3core.py:1564) (247 samples, 0.17%)</title><rect x="12.6652%" y="420" width="0.1699%" height="15" fill="rgb(233,208,19)" fg:x="18418" fg:w="247"/><text x="12.9152%" y="430.50"></text></g><g><title>Z3_get_decl_kind (z3/z3core.py:2997) (331 samples, 0.23%)</title><rect x="12.6246%" y="404" width="0.2276%" height="15" fill="rgb(216,164,2)" fg:x="18359" fg:w="331"/><text x="12.8746%" y="414.50"></text></g><g><title>__bool__ (z3/z3.py:374) (4,478 samples, 3.08%)</title><rect x="9.9098%" y="340" width="3.0793%" height="15" fill="rgb(220,129,5)" fg:x="14411" fg:w="4478"/><text x="10.1598%" y="350.50">__b..</text></g><g><title>is_true (z3/z3.py:1651) (4,427 samples, 3.04%)</title><rect x="9.9449%" y="356" width="3.0442%" height="15" fill="rgb(242,17,10)" fg:x="14462" fg:w="4427"/><text x="10.1949%" y="366.50">is_..</text></g><g><title>is_app_of (z3/z3.py:1403) (4,360 samples, 3.00%)</title><rect x="9.9909%" y="372" width="2.9982%" height="15" fill="rgb(242,107,0)" fg:x="14529" fg:w="4360"/><text x="10.2409%" y="382.50">is_..</text></g><g><title>kind (z3/z3.py:1080) (1,748 samples, 1.20%)</title><rect x="11.7871%" y="388" width="1.2020%" height="15" fill="rgb(251,28,31)" fg:x="17141" fg:w="1748"/><text x="12.0371%" y="398.50"></text></g><g><title>ctx_ref (z3/z3.py:402) (177 samples, 0.12%)</title><rect x="12.8674%" y="404" width="0.1217%" height="15" fill="rgb(233,223,10)" fg:x="18712" fg:w="177"/><text x="13.1174%" y="414.50"></text></g><g><title>Z3_get_ast_kind (z3/z3core.py:3121) (255 samples, 0.18%)</title><rect x="13.3178%" y="420" width="0.1754%" height="15" fill="rgb(215,21,27)" fg:x="19367" fg:w="255"/><text x="13.5678%" y="430.50"></text></g><g><title>Check (z3/z3core.py:1564) (174 samples, 0.12%)</title><rect x="13.5255%" y="436" width="0.1197%" height="15" fill="rgb(232,23,21)" fg:x="19669" fg:w="174"/><text x="13.7755%" y="446.50"></text></g><g><title>Z3_get_ast_kind (z3/z3core.py:3122) (241 samples, 0.17%)</title><rect x="13.4931%" y="420" width="0.1657%" height="15" fill="rgb(244,5,23)" fg:x="19622" fg:w="241"/><text x="13.7431%" y="430.50"></text></g><g><title>is_app (z3/z3.py:1312) (733 samples, 0.50%)</title><rect x="13.1672%" y="388" width="0.5041%" height="15" fill="rgb(226,81,46)" fg:x="19148" fg:w="733"/><text x="13.4172%" y="398.50"></text></g><g><title>_ast_kind (z3/z3.py:494) (594 samples, 0.41%)</title><rect x="13.2628%" y="404" width="0.4085%" height="15" fill="rgb(247,70,30)" fg:x="19287" fg:w="594"/><text x="13.5128%" y="414.50"></text></g><g><title>Z3_get_ast_kind (z3/z3core.py:3121) (290 samples, 0.20%)</title><rect x="13.9834%" y="436" width="0.1994%" height="15" fill="rgb(212,68,19)" fg:x="20335" fg:w="290"/><text x="14.2334%" y="446.50"></text></g><g><title>Check (z3/z3core.py:1564) (200 samples, 0.14%)</title><rect x="14.2090%" y="452" width="0.1375%" height="15" fill="rgb(240,187,13)" fg:x="20663" fg:w="200"/><text x="14.4590%" y="462.50"></text></g><g><title>Z3_get_ast_kind (z3/z3core.py:3122) (262 samples, 0.18%)</title><rect x="14.1829%" y="436" width="0.1802%" height="15" fill="rgb(223,113,26)" fg:x="20625" fg:w="262"/><text x="14.4329%" y="446.50"></text></g><g><title>is_app (z3/z3.py:1312) (843 samples, 0.58%)</title><rect x="13.7985%" y="404" width="0.5797%" height="15" fill="rgb(206,192,2)" fg:x="20066" fg:w="843"/><text x="14.0485%" y="414.50"></text></g><g><title>_ast_kind (z3/z3.py:494) (657 samples, 0.45%)</title><rect x="13.9264%" y="420" width="0.4518%" height="15" fill="rgb(241,108,4)" fg:x="20252" fg:w="657"/><text x="14.1764%" y="430.50"></text></g><g><title>kind (z3/z3.py:1079) (989 samples, 0.68%)</title><rect x="13.7256%" y="388" width="0.6801%" height="15" fill="rgb(247,173,49)" fg:x="19960" fg:w="989"/><text x="13.9756%" y="398.50"></text></g><g><title>Z3_get_app_decl (z3/z3core.py:3076) (253 samples, 0.17%)</title><rect x="14.5336%" y="404" width="0.1740%" height="15" fill="rgb(224,114,35)" fg:x="21135" fg:w="253"/><text x="14.7836%" y="414.50"></text></g><g><title>Check (z3/z3core.py:1564) (173 samples, 0.12%)</title><rect x="14.7447%" y="420" width="0.1190%" height="15" fill="rgb(245,159,27)" fg:x="21442" fg:w="173"/><text x="14.9947%" y="430.50"></text></g><g><title>Z3_get_app_decl (z3/z3core.py:3077) (257 samples, 0.18%)</title><rect x="14.7075%" y="404" width="0.1767%" height="15" fill="rgb(245,172,44)" fg:x="21388" fg:w="257"/><text x="14.9575%" y="414.50"></text></g><g><title>Z3_get_decl_kind (z3/z3core.py:2996) (232 samples, 0.16%)</title><rect x="14.8870%" y="404" width="0.1595%" height="15" fill="rgb(236,23,11)" fg:x="21649" fg:w="232"/><text x="15.1370%" y="414.50"></text></g><g><title>Check (z3/z3core.py:1564) (153 samples, 0.11%)</title><rect x="15.0754%" y="420" width="0.1052%" height="15" fill="rgb(205,117,38)" fg:x="21923" fg:w="153"/><text x="15.3254%" y="430.50"></text></g><g><title>Z3_get_decl_kind (z3/z3core.py:2997) (225 samples, 0.15%)</title><rect x="15.0466%" y="404" width="0.1547%" height="15" fill="rgb(237,72,25)" fg:x="21881" fg:w="225"/><text x="15.2966%" y="414.50"></text></g><g><title>__bool__ (z3/z3.py:376) (3,401 samples, 2.34%)</title><rect x="12.9898%" y="340" width="2.3387%" height="15" fill="rgb(244,70,9)" fg:x="18890" fg:w="3401"/><text x="13.2398%" y="350.50">_..</text></g><g><title>is_false (z3/z3.py:1665) (3,349 samples, 2.30%)</title><rect x="13.0255%" y="356" width="2.3030%" height="15" fill="rgb(217,125,39)" fg:x="18942" fg:w="3349"/><text x="13.2755%" y="366.50">i..</text></g><g><title>is_app_of (z3/z3.py:1403) (3,279 samples, 2.25%)</title><rect x="13.0737%" y="372" width="2.2548%" height="15" fill="rgb(235,36,10)" fg:x="19012" fg:w="3279"/><text x="13.3237%" y="382.50">i..</text></g><g><title>kind (z3/z3.py:1080) (1,342 samples, 0.92%)</title><rect x="14.4057%" y="388" width="0.9228%" height="15" fill="rgb(251,123,47)" fg:x="20949" fg:w="1342"/><text x="14.6557%" y="398.50"></text></g><g><title>ctx_ref (z3/z3.py:402) (168 samples, 0.12%)</title><rect x="15.2130%" y="404" width="0.1155%" height="15" fill="rgb(221,13,13)" fg:x="22123" fg:w="168"/><text x="15.4630%" y="414.50"></text></g><g><title>compute_hm_ (h2propagator.py:183) (8,026 samples, 5.52%)</title><rect x="9.8101%" y="308" width="5.5191%" height="15" fill="rgb(238,131,9)" fg:x="14266" fg:w="8026"/><text x="10.0601%" y="318.50">compute..</text></g><g><title>&lt;listcomp&gt; (h2propagator.py:183) (8,017 samples, 5.51%)</title><rect x="9.8163%" y="324" width="5.5129%" height="15" fill="rgb(211,50,8)" fg:x="14275" fg:w="8017"/><text x="10.0663%" y="334.50">&lt;listco..</text></g><g><title>_ast_kind (z3/z3.py:493) (158 samples, 0.11%)</title><rect x="16.0230%" y="420" width="0.1086%" height="15" fill="rgb(245,182,24)" fg:x="23301" fg:w="158"/><text x="16.2730%" y="430.50"></text></g><g><title>Z3_get_ast_kind (z3/z3core.py:3121) (708 samples, 0.49%)</title><rect x="16.2499%" y="436" width="0.4869%" height="15" fill="rgb(242,14,37)" fg:x="23631" fg:w="708"/><text x="16.4999%" y="446.50"></text></g><g><title>Check (z3/z3core.py:1564) (339 samples, 0.23%)</title><rect x="16.7953%" y="452" width="0.2331%" height="15" fill="rgb(246,228,12)" fg:x="24424" fg:w="339"/><text x="17.0453%" y="462.50"></text></g><g><title>Z3_get_ast_kind (z3/z3core.py:3122) (481 samples, 0.33%)</title><rect x="16.7368%" y="436" width="0.3308%" height="15" fill="rgb(213,55,15)" fg:x="24339" fg:w="481"/><text x="16.9868%" y="446.50"></text></g><g><title>is_app (z3/z3.py:1312) (1,823 samples, 1.25%)</title><rect x="15.8470%" y="404" width="1.2536%" height="15" fill="rgb(209,9,3)" fg:x="23045" fg:w="1823"/><text x="16.0970%" y="414.50"></text></g><g><title>_ast_kind (z3/z3.py:494) (1,409 samples, 0.97%)</title><rect x="16.1317%" y="420" width="0.9689%" height="15" fill="rgb(230,59,30)" fg:x="23459" fg:w="1409"/><text x="16.3817%" y="430.50"></text></g><g><title>_ast_kind (z3/z3.py:492) (156 samples, 0.11%)</title><rect x="17.4107%" y="436" width="0.1073%" height="15" fill="rgb(209,121,21)" fg:x="25319" fg:w="156"/><text x="17.6607%" y="446.50"></text></g><g><title>Z3_get_ast_kind (z3/z3core.py:3121) (554 samples, 0.38%)</title><rect x="17.7277%" y="452" width="0.3810%" height="15" fill="rgb(220,109,13)" fg:x="25780" fg:w="554"/><text x="17.9777%" y="462.50"></text></g><g><title>Check (z3/z3core.py:1564) (353 samples, 0.24%)</title><rect x="18.1589%" y="468" width="0.2427%" height="15" fill="rgb(232,18,1)" fg:x="26407" fg:w="353"/><text x="18.4089%" y="478.50"></text></g><g><title>Z3_get_ast_kind (z3/z3core.py:3122) (471 samples, 0.32%)</title><rect x="18.1087%" y="452" width="0.3239%" height="15" fill="rgb(215,41,42)" fg:x="26334" fg:w="471"/><text x="18.3587%" y="462.50"></text></g><g><title>is_app (z3/z3.py:1312) (1,624 samples, 1.12%)</title><rect x="17.3406%" y="420" width="1.1167%" height="15" fill="rgb(224,123,36)" fg:x="25217" fg:w="1624"/><text x="17.5906%" y="430.50"></text></g><g><title>_ast_kind (z3/z3.py:494) (1,253 samples, 0.86%)</title><rect x="17.5957%" y="436" width="0.8616%" height="15" fill="rgb(240,125,3)" fg:x="25588" fg:w="1253"/><text x="17.8457%" y="446.50"></text></g><g><title>kind (z3/z3.py:1079) (1,913 samples, 1.32%)</title><rect x="17.1865%" y="404" width="1.3155%" height="15" fill="rgb(205,98,50)" fg:x="24993" fg:w="1913"/><text x="17.4365%" y="414.50"></text></g><g><title>Z3_get_app_decl (z3/z3core.py:3076) (516 samples, 0.35%)</title><rect x="18.7743%" y="420" width="0.3548%" height="15" fill="rgb(205,185,37)" fg:x="27302" fg:w="516"/><text x="19.0243%" y="430.50"></text></g><g><title>Check (z3/z3core.py:1564) (343 samples, 0.24%)</title><rect x="19.1931%" y="436" width="0.2359%" height="15" fill="rgb(238,207,15)" fg:x="27911" fg:w="343"/><text x="19.4431%" y="446.50"></text></g><g><title>Z3_get_app_decl (z3/z3core.py:3077) (476 samples, 0.33%)</title><rect x="19.1292%" y="420" width="0.3273%" height="15" fill="rgb(213,199,42)" fg:x="27818" fg:w="476"/><text x="19.3792%" y="430.50"></text></g><g><title>Z3_get_decl_kind (z3/z3core.py:2996) (519 samples, 0.36%)</title><rect x="19.4695%" y="420" width="0.3569%" height="15" fill="rgb(235,201,11)" fg:x="28313" fg:w="519"/><text x="19.7195%" y="430.50"></text></g><g><title>Check (z3/z3core.py:1564) (357 samples, 0.25%)</title><rect x="19.8821%" y="436" width="0.2455%" height="15" fill="rgb(207,46,11)" fg:x="28913" fg:w="357"/><text x="20.1321%" y="446.50"></text></g><g><title>Z3_get_decl_kind (z3/z3core.py:2997) (507 samples, 0.35%)</title><rect x="19.8264%" y="420" width="0.3486%" height="15" fill="rgb(241,35,35)" fg:x="28832" fg:w="507"/><text x="20.0764%" y="430.50"></text></g><g><title>__bool__ (z3/z3.py:374) (7,082 samples, 4.87%)</title><rect x="15.5499%" y="356" width="4.8700%" height="15" fill="rgb(243,32,47)" fg:x="22613" fg:w="7082"/><text x="15.7999%" y="366.50">__bool..</text></g><g><title>is_true (z3/z3.py:1651) (6,999 samples, 4.81%)</title><rect x="15.6070%" y="372" width="4.8129%" height="15" fill="rgb(247,202,23)" fg:x="22696" fg:w="6999"/><text x="15.8570%" y="382.50">is_tru..</text></g><g><title>is_app_of (z3/z3.py:1403) (6,918 samples, 4.76%)</title><rect x="15.6627%" y="388" width="4.7572%" height="15" fill="rgb(219,102,11)" fg:x="22777" fg:w="6918"/><text x="15.9127%" y="398.50">is_app..</text></g><g><title>kind (z3/z3.py:1080) (2,789 samples, 1.92%)</title><rect x="18.5020%" y="404" width="1.9179%" height="15" fill="rgb(243,110,44)" fg:x="26906" fg:w="2789"/><text x="18.7520%" y="414.50">k..</text></g><g><title>ctx_ref (z3/z3.py:402) (330 samples, 0.23%)</title><rect x="20.1930%" y="420" width="0.2269%" height="15" fill="rgb(222,74,54)" fg:x="29365" fg:w="330"/><text x="20.4430%" y="430.50"></text></g><g><title>Z3_get_ast_kind (z3/z3core.py:3121) (454 samples, 0.31%)</title><rect x="20.9129%" y="436" width="0.3122%" height="15" fill="rgb(216,99,12)" fg:x="30412" fg:w="454"/><text x="21.1629%" y="446.50"></text></g><g><title>Check (z3/z3core.py:1564) (278 samples, 0.19%)</title><rect x="21.2712%" y="452" width="0.1912%" height="15" fill="rgb(226,22,26)" fg:x="30933" fg:w="278"/><text x="21.5212%" y="462.50"></text></g><g><title>Z3_get_ast_kind (z3/z3core.py:3122) (379 samples, 0.26%)</title><rect x="21.2251%" y="436" width="0.2606%" height="15" fill="rgb(217,163,10)" fg:x="30866" fg:w="379"/><text x="21.4751%" y="446.50"></text></g><g><title>is_app (z3/z3.py:1312) (1,248 samples, 0.86%)</title><rect x="20.6530%" y="404" width="0.8582%" height="15" fill="rgb(213,25,53)" fg:x="30034" fg:w="1248"/><text x="20.9030%" y="414.50"></text></g><g><title>_ast_kind (z3/z3.py:494) (979 samples, 0.67%)</title><rect x="20.8380%" y="420" width="0.6732%" height="15" fill="rgb(252,105,26)" fg:x="30303" fg:w="979"/><text x="21.0880%" y="430.50"></text></g><g><title>Z3_get_ast_kind (z3/z3core.py:3121) (459 samples, 0.32%)</title><rect x="22.0228%" y="452" width="0.3156%" height="15" fill="rgb(220,39,43)" fg:x="32026" fg:w="459"/><text x="22.2728%" y="462.50"></text></g><g><title>Check (z3/z3core.py:1564) (274 samples, 0.19%)</title><rect x="22.3811%" y="468" width="0.1884%" height="15" fill="rgb(229,68,48)" fg:x="32547" fg:w="274"/><text x="22.6311%" y="478.50"></text></g><g><title>Z3_get_ast_kind (z3/z3core.py:3122) (375 samples, 0.26%)</title><rect x="22.3384%" y="452" width="0.2579%" height="15" fill="rgb(252,8,32)" fg:x="32485" fg:w="375"/><text x="22.5884%" y="462.50"></text></g><g><title>is_app (z3/z3.py:1312) (1,298 samples, 0.89%)</title><rect x="21.7312%" y="420" width="0.8926%" height="15" fill="rgb(223,20,43)" fg:x="31602" fg:w="1298"/><text x="21.9812%" y="430.50"></text></g><g><title>_ast_kind (z3/z3.py:494) (1,004 samples, 0.69%)</title><rect x="21.9334%" y="436" width="0.6904%" height="15" fill="rgb(229,81,49)" fg:x="31896" fg:w="1004"/><text x="22.1834%" y="446.50"></text></g><g><title>kind (z3/z3.py:1079) (1,554 samples, 1.07%)</title><rect x="21.5951%" y="404" width="1.0686%" height="15" fill="rgb(236,28,36)" fg:x="31404" fg:w="1554"/><text x="21.8451%" y="414.50"></text></g><g><title>Z3_get_app_decl (z3/z3core.py:3076) (410 samples, 0.28%)</title><rect x="22.8872%" y="420" width="0.2819%" height="15" fill="rgb(249,185,26)" fg:x="33283" fg:w="410"/><text x="23.1372%" y="430.50"></text></g><g><title>Check (z3/z3core.py:1564) (258 samples, 0.18%)</title><rect x="23.2111%" y="436" width="0.1774%" height="15" fill="rgb(249,174,33)" fg:x="33754" fg:w="258"/><text x="23.4611%" y="446.50"></text></g><g><title>Z3_get_app_decl (z3/z3core.py:3077) (368 samples, 0.25%)</title><rect x="23.1691%" y="420" width="0.2531%" height="15" fill="rgb(233,201,37)" fg:x="33693" fg:w="368"/><text x="23.4191%" y="430.50"></text></g><g><title>Z3_get_decl_kind (z3/z3core.py:2996) (412 samples, 0.28%)</title><rect x="23.4270%" y="420" width="0.2833%" height="15" fill="rgb(221,78,26)" fg:x="34068" fg:w="412"/><text x="23.6770%" y="430.50"></text></g><g><title>Check (z3/z3core.py:1564) (267 samples, 0.18%)</title><rect x="23.7474%" y="436" width="0.1836%" height="15" fill="rgb(250,127,30)" fg:x="34534" fg:w="267"/><text x="23.9974%" y="446.50"></text></g><g><title>Z3_get_decl_kind (z3/z3core.py:2997) (366 samples, 0.25%)</title><rect x="23.7103%" y="420" width="0.2517%" height="15" fill="rgb(230,49,44)" fg:x="34480" fg:w="366"/><text x="23.9603%" y="430.50"></text></g><g><title>__bool__ (z3/z3.py:376) (5,388 samples, 3.71%)</title><rect x="20.4206%" y="356" width="3.7051%" height="15" fill="rgb(229,67,23)" fg:x="29696" fg:w="5388"/><text x="20.6706%" y="366.50">__bo..</text></g><g><title>is_false (z3/z3.py:1665) (5,330 samples, 3.67%)</title><rect x="20.4605%" y="372" width="3.6652%" height="15" fill="rgb(249,83,47)" fg:x="29754" fg:w="5330"/><text x="20.7105%" y="382.50">is_f..</text></g><g><title>is_app_of (z3/z3.py:1403) (5,236 samples, 3.60%)</title><rect x="20.5251%" y="388" width="3.6006%" height="15" fill="rgb(215,43,3)" fg:x="29848" fg:w="5236"/><text x="20.7751%" y="398.50">is_a..</text></g><g><title>kind (z3/z3.py:1080) (2,126 samples, 1.46%)</title><rect x="22.6637%" y="404" width="1.4620%" height="15" fill="rgb(238,154,13)" fg:x="32958" fg:w="2126"/><text x="22.9137%" y="414.50"></text></g><g><title>ctx_ref (z3/z3.py:402) (217 samples, 0.15%)</title><rect x="23.9764%" y="420" width="0.1492%" height="15" fill="rgb(219,56,2)" fg:x="34867" fg:w="217"/><text x="24.2264%" y="430.50"></text></g><g><title>compute_hm_ (h2propagator.py:183) (12,737 samples, 8.76%)</title><rect x="15.3684%" y="324" width="8.7586%" height="15" fill="rgb(233,0,4)" fg:x="22349" fg:w="12737"/><text x="15.6184%" y="334.50">compute_hm_ ..</text></g><g><title>&lt;listcomp&gt; (h2propagator.py:183) (12,724 samples, 8.75%)</title><rect x="15.3773%" y="340" width="8.7497%" height="15" fill="rgb(235,30,7)" fg:x="22362" fg:w="12724"/><text x="15.6273%" y="350.50">&lt;listcomp&gt; (..</text></g><g><title>__hash__ (unified_planning/model/action.py:223) (203 samples, 0.14%)</title><rect x="24.6111%" y="340" width="0.1396%" height="15" fill="rgb(250,79,13)" fg:x="35790" fg:w="203"/><text x="24.8611%" y="350.50"></text></g><g><title>__hash__ (unified_planning/model/action.py:224) (420 samples, 0.29%)</title><rect x="24.7507%" y="340" width="0.2888%" height="15" fill="rgb(211,146,34)" fg:x="35993" fg:w="420"/><text x="25.0007%" y="350.50"></text></g><g><title>__hash__ (unified_planning/model/action.py:226) (196 samples, 0.13%)</title><rect x="25.0395%" y="340" width="0.1348%" height="15" fill="rgb(228,22,38)" fg:x="36413" fg:w="196"/><text x="25.2895%" y="350.50"></text></g><g><title>__hash__ (unified_planning/model/action.py:227) (709 samples, 0.49%)</title><rect x="25.1743%" y="340" width="0.4875%" height="15" fill="rgb(235,168,5)" fg:x="36609" fg:w="709"/><text x="25.4243%" y="350.50"></text></g><g><title>__hash__ (unified_planning/model/action.py:228) (232 samples, 0.16%)</title><rect x="25.6619%" y="340" width="0.1595%" height="15" fill="rgb(221,155,16)" fg:x="37318" fg:w="232"/><text x="25.9119%" y="350.50"></text></g><g><title>__hash__ (unified_planning/model/effect.py:134) (1,154 samples, 0.79%)</title><rect x="26.3255%" y="356" width="0.7936%" height="15" fill="rgb(215,215,53)" fg:x="38283" fg:w="1154"/><text x="26.5755%" y="366.50"></text></g><g><title>__hash__ (unified_planning/model/effect.py:135) (767 samples, 0.53%)</title><rect x="27.1190%" y="356" width="0.5274%" height="15" fill="rgb(223,4,10)" fg:x="39437" fg:w="767"/><text x="27.3690%" y="366.50"></text></g><g><title>__hash__ (unified_planning/model/fnode.py:54) (171 samples, 0.12%)</title><rect x="27.5288%" y="372" width="0.1176%" height="15" fill="rgb(234,103,6)" fg:x="40033" fg:w="171"/><text x="27.7788%" y="382.50"></text></g><g><title>__hash__ (unified_planning/model/effect.py:136) (585 samples, 0.40%)</title><rect x="27.6464%" y="356" width="0.4023%" height="15" fill="rgb(227,97,0)" fg:x="40204" fg:w="585"/><text x="27.8964%" y="366.50"></text></g><g><title>__hash__ (unified_planning/model/effect.py:137) (865 samples, 0.59%)</title><rect x="28.0487%" y="356" width="0.5948%" height="15" fill="rgb(234,150,53)" fg:x="40789" fg:w="865"/><text x="28.2987%" y="366.50"></text></g><g><title>__hash__ (enum.py:775) (297 samples, 0.20%)</title><rect x="28.4393%" y="372" width="0.2042%" height="15" fill="rgb(228,201,54)" fg:x="41357" fg:w="297"/><text x="28.6893%" y="382.50"></text></g><g><title>__hash__ (unified_planning/model/action.py:229) (5,757 samples, 3.96%)</title><rect x="25.8214%" y="340" width="3.9588%" height="15" fill="rgb(222,22,37)" fg:x="37550" fg:w="5757"/><text x="26.0714%" y="350.50">__ha..</text></g><g><title>__hash__ (unified_planning/model/effect.py:138) (1,653 samples, 1.14%)</title><rect x="28.6435%" y="356" width="1.1367%" height="15" fill="rgb(237,53,32)" fg:x="41654" fg:w="1653"/><text x="28.8935%" y="366.50"></text></g><g><title>__hash__ (unified_planning/model/action.py:230) (251 samples, 0.17%)</title><rect x="29.7802%" y="340" width="0.1726%" height="15" fill="rgb(233,25,53)" fg:x="43307" fg:w="251"/><text x="30.0302%" y="350.50"></text></g><g><title>__hash__ (unified_planning/model/action.py:224) (181 samples, 0.12%)</title><rect x="30.3984%" y="356" width="0.1245%" height="15" fill="rgb(210,40,34)" fg:x="44206" fg:w="181"/><text x="30.6484%" y="366.50"></text></g><g><title>__hash__ (unified_planning/model/action.py:227) (466 samples, 0.32%)</title><rect x="30.5841%" y="356" width="0.3204%" height="15" fill="rgb(241,220,44)" fg:x="44476" fg:w="466"/><text x="30.8341%" y="366.50"></text></g><g><title>__hash__ (unified_planning/model/effect.py:134) (667 samples, 0.46%)</title><rect x="31.2944%" y="372" width="0.4587%" height="15" fill="rgb(235,28,35)" fg:x="45509" fg:w="667"/><text x="31.5444%" y="382.50"></text></g><g><title>__hash__ (unified_planning/model/effect.py:135) (377 samples, 0.26%)</title><rect x="31.7531%" y="372" width="0.2592%" height="15" fill="rgb(210,56,17)" fg:x="46176" fg:w="377"/><text x="32.0031%" y="382.50"></text></g><g><title>__hash__ (unified_planning/model/effect.py:136) (386 samples, 0.27%)</title><rect x="32.0124%" y="372" width="0.2654%" height="15" fill="rgb(224,130,29)" fg:x="46553" fg:w="386"/><text x="32.2624%" y="382.50"></text></g><g><title>__hash__ (unified_planning/model/effect.py:137) (513 samples, 0.35%)</title><rect x="32.2778%" y="372" width="0.3528%" height="15" fill="rgb(235,212,8)" fg:x="46939" fg:w="513"/><text x="32.5278%" y="382.50"></text></g><g><title>__hash__ (enum.py:775) (183 samples, 0.13%)</title><rect x="32.5047%" y="388" width="0.1258%" height="15" fill="rgb(223,33,50)" fg:x="47269" fg:w="183"/><text x="32.7547%" y="398.50"></text></g><g><title>__hash__ (unified_planning/model/action.py:229) (2,904 samples, 2.00%)</title><rect x="30.9774%" y="356" width="1.9969%" height="15" fill="rgb(219,149,13)" fg:x="45048" fg:w="2904"/><text x="31.2274%" y="366.50">_..</text></g><g><title>__hash__ (unified_planning/model/effect.py:138) (500 samples, 0.34%)</title><rect x="32.6306%" y="372" width="0.3438%" height="15" fill="rgb(250,156,29)" fg:x="47452" fg:w="500"/><text x="32.8806%" y="382.50"></text></g><g><title>str_repr (pyPMT/pypmt/encoders/utilities.py:22) (289 samples, 0.20%)</title><rect x="33.2570%" y="356" width="0.1987%" height="15" fill="rgb(216,193,19)" fg:x="48363" fg:w="289"/><text x="33.5070%" y="366.50"></text></g><g><title>parameters (unified_planning/model/action.py:112) (158 samples, 0.11%)</title><rect x="33.3471%" y="372" width="0.1086%" height="15" fill="rgb(216,135,14)" fg:x="48494" fg:w="158"/><text x="33.5971%" y="382.50"></text></g><g><title>regression (h2propagator.py:169) (5,107 samples, 3.51%)</title><rect x="29.9776%" y="340" width="3.5118%" height="15" fill="rgb(241,47,5)" fg:x="43594" fg:w="5107"/><text x="30.2276%" y="350.50">reg..</text></g><g><title>regression (h2propagator.py:170) (546 samples, 0.38%)</title><rect x="33.4894%" y="340" width="0.3755%" height="15" fill="rgb(233,42,35)" fg:x="48701" fg:w="546"/><text x="33.7394%" y="350.50"></text></g><g><title>&lt;listcomp&gt; (h2propagator.py:170) (235 samples, 0.16%)</title><rect x="33.7033%" y="356" width="0.1616%" height="15" fill="rgb(231,13,6)" fg:x="49012" fg:w="235"/><text x="33.9533%" y="366.50"></text></g><g><title>regression (h2propagator.py:171) (371 samples, 0.26%)</title><rect x="33.8649%" y="340" width="0.2551%" height="15" fill="rgb(207,181,40)" fg:x="49247" fg:w="371"/><text x="34.1149%" y="350.50"></text></g><g><title>compute_hm_ (h2propagator.py:193) (14,545 samples, 10.00%)</title><rect x="24.1511%" y="324" width="10.0019%" height="15" fill="rgb(254,173,49)" fg:x="35121" fg:w="14545"/><text x="24.4011%" y="334.50">compute_hm_ (h..</text></g><g><title>_ast_kind (z3/z3.py:492) (331 samples, 0.23%)</title><rect x="35.6012%" y="436" width="0.2276%" height="15" fill="rgb(221,1,38)" fg:x="51772" fg:w="331"/><text x="35.8512%" y="446.50"></text></g><g><title>_ast_kind (z3/z3.py:493) (253 samples, 0.17%)</title><rect x="35.8288%" y="436" width="0.1740%" height="15" fill="rgb(206,124,46)" fg:x="52103" fg:w="253"/><text x="36.0788%" y="446.50"></text></g><g><title>Z3_get_ast_kind (z3/z3core.py:3121) (1,423 samples, 0.98%)</title><rect x="36.3033%" y="452" width="0.9785%" height="15" fill="rgb(249,21,11)" fg:x="52793" fg:w="1423"/><text x="36.5533%" y="462.50"></text></g><g><title>Check (z3/z3core.py:1564) (797 samples, 0.55%)</title><rect x="37.4166%" y="468" width="0.5481%" height="15" fill="rgb(222,201,40)" fg:x="54412" fg:w="797"/><text x="37.6666%" y="478.50"></text></g><g><title>Z3_get_ast_kind (z3/z3core.py:3122) (1,102 samples, 0.76%)</title><rect x="37.2818%" y="452" width="0.7578%" height="15" fill="rgb(235,61,29)" fg:x="54216" fg:w="1102"/><text x="37.5318%" y="462.50"></text></g><g><title>is_app (z3/z3.py:1312) (3,967 samples, 2.73%)</title><rect x="35.4039%" y="420" width="2.7279%" height="15" fill="rgb(219,207,3)" fg:x="51485" fg:w="3967"/><text x="35.6539%" y="430.50">is..</text></g><g><title>_ast_kind (z3/z3.py:494) (3,096 samples, 2.13%)</title><rect x="36.0028%" y="436" width="2.1290%" height="15" fill="rgb(222,56,46)" fg:x="52356" fg:w="3096"/><text x="36.2528%" y="446.50">_..</text></g><g><title>is_app (z3/z3.py:1313) (212 samples, 0.15%)</title><rect x="38.1318%" y="420" width="0.1458%" height="15" fill="rgb(239,76,54)" fg:x="55452" fg:w="212"/><text x="38.3818%" y="430.50"></text></g><g><title>kind (z3/z3.py:1078) (160 samples, 0.11%)</title><rect x="38.2948%" y="420" width="0.1100%" height="15" fill="rgb(231,124,27)" fg:x="55689" fg:w="160"/><text x="38.5448%" y="430.50"></text></g><g><title>_ast_kind (z3/z3.py:492) (271 samples, 0.19%)</title><rect x="38.9391%" y="452" width="0.1864%" height="15" fill="rgb(249,195,6)" fg:x="56626" fg:w="271"/><text x="39.1891%" y="462.50"></text></g><g><title>_ast_kind (z3/z3.py:493) (298 samples, 0.20%)</title><rect x="39.1254%" y="452" width="0.2049%" height="15" fill="rgb(237,174,47)" fg:x="56897" fg:w="298"/><text x="39.3754%" y="462.50"></text></g><g><title>Z3_get_ast_kind (z3/z3core.py:3121) (1,314 samples, 0.90%)</title><rect x="39.6185%" y="468" width="0.9036%" height="15" fill="rgb(206,201,31)" fg:x="57614" fg:w="1314"/><text x="39.8685%" y="478.50"></text></g><g><title>Check (z3/z3core.py:1564) (810 samples, 0.56%)</title><rect x="40.6562%" y="484" width="0.5570%" height="15" fill="rgb(231,57,52)" fg:x="59123" fg:w="810"/><text x="40.9062%" y="494.50"></text></g><g><title>Z3_get_ast_kind (z3/z3core.py:3122) (1,124 samples, 0.77%)</title><rect x="40.5221%" y="468" width="0.7729%" height="15" fill="rgb(248,177,22)" fg:x="58928" fg:w="1124"/><text x="40.7721%" y="478.50"></text></g><g><title>is_app (z3/z3.py:1312) (3,744 samples, 2.57%)</title><rect x="38.7844%" y="436" width="2.5746%" height="15" fill="rgb(215,211,37)" fg:x="56401" fg:w="3744"/><text x="39.0344%" y="446.50">is..</text></g><g><title>_ast_kind (z3/z3.py:494) (2,950 samples, 2.03%)</title><rect x="39.3304%" y="452" width="2.0286%" height="15" fill="rgb(241,128,51)" fg:x="57195" fg:w="2950"/><text x="39.5804%" y="462.50">_..</text></g><g><title>kind (z3/z3.py:1079) (4,477 samples, 3.08%)</title><rect x="38.4048%" y="420" width="3.0786%" height="15" fill="rgb(227,165,31)" fg:x="55849" fg:w="4477"/><text x="38.6548%" y="430.50">kin..</text></g><g><title>is_app (z3/z3.py:1313) (181 samples, 0.12%)</title><rect x="41.3589%" y="436" width="0.1245%" height="15" fill="rgb(228,167,24)" fg:x="60145" fg:w="181"/><text x="41.6089%" y="446.50"></text></g><g><title>Z3_get_app_decl (z3/z3core.py:3076) (1,286 samples, 0.88%)</title><rect x="42.0418%" y="436" width="0.8843%" height="15" fill="rgb(228,143,12)" fg:x="61138" fg:w="1286"/><text x="42.2918%" y="446.50"></text></g><g><title>Check (z3/z3core.py:1564) (755 samples, 0.52%)</title><rect x="43.0726%" y="452" width="0.5192%" height="15" fill="rgb(249,149,8)" fg:x="62637" fg:w="755"/><text x="43.3226%" y="462.50"></text></g><g><title>Z3_get_app_decl (z3/z3core.py:3077) (1,094 samples, 0.75%)</title><rect x="42.9261%" y="436" width="0.7523%" height="15" fill="rgb(243,35,44)" fg:x="62424" fg:w="1094"/><text x="43.1761%" y="446.50"></text></g><g><title>Z3_get_decl_kind (z3/z3core.py:2996) (1,100 samples, 0.76%)</title><rect x="43.6935%" y="436" width="0.7564%" height="15" fill="rgb(246,89,9)" fg:x="63540" fg:w="1100"/><text x="43.9435%" y="446.50"></text></g><g><title>Check (z3/z3core.py:1564) (757 samples, 0.52%)</title><rect x="44.5923%" y="452" width="0.5206%" height="15" fill="rgb(233,213,13)" fg:x="64847" fg:w="757"/><text x="44.8423%" y="462.50"></text></g><g><title>Z3_get_decl_kind (z3/z3core.py:2997) (1,090 samples, 0.75%)</title><rect x="44.4499%" y="436" width="0.7495%" height="15" fill="rgb(233,141,41)" fg:x="64640" fg:w="1090"/><text x="44.6999%" y="446.50"></text></g><g><title>__bool__ (z3/z3.py:374) (16,151 samples, 11.11%)</title><rect x="34.6399%" y="372" width="11.1063%" height="15" fill="rgb(239,167,4)" fg:x="50374" fg:w="16151"/><text x="34.8899%" y="382.50">__bool__ (z3/z3...</text></g><g><title>is_true (z3/z3.py:1651) (15,935 samples, 10.96%)</title><rect x="34.7884%" y="388" width="10.9578%" height="15" fill="rgb(209,217,16)" fg:x="50590" fg:w="15935"/><text x="35.0384%" y="398.50">is_true (z3/z3.p..</text></g><g><title>is_app_of (z3/z3.py:1403) (15,661 samples, 10.77%)</title><rect x="34.9768%" y="404" width="10.7693%" height="15" fill="rgb(219,88,35)" fg:x="50864" fg:w="15661"/><text x="35.2268%" y="414.50">is_app_of (z3/z3..</text></g><g><title>kind (z3/z3.py:1080) (6,199 samples, 4.26%)</title><rect x="41.4834%" y="420" width="4.2628%" height="15" fill="rgb(220,193,23)" fg:x="60326" fg:w="6199"/><text x="41.7334%" y="430.50">kind ..</text></g><g><title>ctx_ref (z3/z3.py:402) (735 samples, 0.51%)</title><rect x="45.2407%" y="436" width="0.5054%" height="15" fill="rgb(230,90,52)" fg:x="65790" fg:w="735"/><text x="45.4907%" y="446.50"></text></g><g><title>ref (z3/z3.py:220) (177 samples, 0.12%)</title><rect x="45.6245%" y="452" width="0.1217%" height="15" fill="rgb(252,106,19)" fg:x="66348" fg:w="177"/><text x="45.8745%" y="462.50"></text></g><g><title>_ast_kind (z3/z3.py:492) (181 samples, 0.12%)</title><rect x="46.4283%" y="436" width="0.1245%" height="15" fill="rgb(206,74,20)" fg:x="67517" fg:w="181"/><text x="46.6783%" y="446.50"></text></g><g><title>_ast_kind (z3/z3.py:493) (204 samples, 0.14%)</title><rect x="46.5528%" y="436" width="0.1403%" height="15" fill="rgb(230,138,44)" fg:x="67698" fg:w="204"/><text x="46.8028%" y="446.50"></text></g><g><title>Z3_get_ast_kind (z3/z3core.py:3121) (991 samples, 0.68%)</title><rect x="46.8870%" y="452" width="0.6815%" height="15" fill="rgb(235,182,43)" fg:x="68184" fg:w="991"/><text x="47.1370%" y="462.50"></text></g><g><title>Check (z3/z3core.py:1564) (629 samples, 0.43%)</title><rect x="47.6709%" y="468" width="0.4325%" height="15" fill="rgb(242,16,51)" fg:x="69324" fg:w="629"/><text x="47.9209%" y="478.50"></text></g><g><title>Z3_get_ast_kind (z3/z3core.py:3122) (891 samples, 0.61%)</title><rect x="47.5685%" y="452" width="0.6127%" height="15" fill="rgb(248,9,4)" fg:x="69175" fg:w="891"/><text x="47.8185%" y="462.50"></text></g><g><title>is_app (z3/z3.py:1312) (2,816 samples, 1.94%)</title><rect x="46.3066%" y="420" width="1.9364%" height="15" fill="rgb(210,31,22)" fg:x="67340" fg:w="2816"/><text x="46.5566%" y="430.50">i..</text></g><g><title>_ast_kind (z3/z3.py:494) (2,254 samples, 1.55%)</title><rect x="46.6931%" y="436" width="1.5500%" height="15" fill="rgb(239,54,39)" fg:x="67902" fg:w="2254"/><text x="46.9431%" y="446.50"></text></g><g><title>is_app (z3/z3.py:1313) (152 samples, 0.10%)</title><rect x="48.2430%" y="420" width="0.1045%" height="15" fill="rgb(230,99,41)" fg:x="70156" fg:w="152"/><text x="48.4930%" y="430.50"></text></g><g><title>_ast_kind (z3/z3.py:492) (197 samples, 0.14%)</title><rect x="48.9183%" y="452" width="0.1355%" height="15" fill="rgb(253,106,12)" fg:x="71138" fg:w="197"/><text x="49.1683%" y="462.50"></text></g><g><title>_ast_kind (z3/z3.py:493) (216 samples, 0.15%)</title><rect x="49.0538%" y="452" width="0.1485%" height="15" fill="rgb(213,46,41)" fg:x="71335" fg:w="216"/><text x="49.3038%" y="462.50"></text></g><g><title>Z3_get_ast_kind (z3/z3core.py:3121) (1,098 samples, 0.76%)</title><rect x="49.4361%" y="468" width="0.7550%" height="15" fill="rgb(215,133,35)" fg:x="71891" fg:w="1098"/><text x="49.6861%" y="478.50"></text></g><g><title>Check (z3/z3core.py:1564) (574 samples, 0.39%)</title><rect x="50.2909%" y="484" width="0.3947%" height="15" fill="rgb(213,28,5)" fg:x="73134" fg:w="574"/><text x="50.5409%" y="494.50"></text></g><g><title>Z3_get_ast_kind (z3/z3core.py:3122) (809 samples, 0.56%)</title><rect x="50.1912%" y="468" width="0.5563%" height="15" fill="rgb(215,77,49)" fg:x="72989" fg:w="809"/><text x="50.4412%" y="478.50"></text></g><g><title>is_app (z3/z3.py:1312) (2,939 samples, 2.02%)</title><rect x="48.7753%" y="436" width="2.0210%" height="15" fill="rgb(248,100,22)" fg:x="70930" fg:w="2939"/><text x="49.0253%" y="446.50">i..</text></g><g><title>_ast_kind (z3/z3.py:494) (2,318 samples, 1.59%)</title><rect x="49.2023%" y="452" width="1.5940%" height="15" fill="rgb(208,67,9)" fg:x="71551" fg:w="2318"/><text x="49.4523%" y="462.50"></text></g><g><title>kind (z3/z3.py:1079) (3,535 samples, 2.43%)</title><rect x="48.4597%" y="420" width="2.4309%" height="15" fill="rgb(219,133,21)" fg:x="70471" fg:w="3535"/><text x="48.7097%" y="430.50">ki..</text></g><g><title>Z3_get_app_decl (z3/z3core.py:3076) (915 samples, 0.63%)</title><rect x="51.3265%" y="436" width="0.6292%" height="15" fill="rgb(246,46,29)" fg:x="74640" fg:w="915"/><text x="51.5765%" y="446.50"></text></g><g><title>Check (z3/z3core.py:1564) (577 samples, 0.40%)</title><rect x="52.0692%" y="452" width="0.3968%" height="15" fill="rgb(246,185,52)" fg:x="75720" fg:w="577"/><text x="52.3192%" y="462.50"></text></g><g><title>Z3_get_app_decl (z3/z3core.py:3077) (854 samples, 0.59%)</title><rect x="51.9557%" y="436" width="0.5873%" height="15" fill="rgb(252,136,11)" fg:x="75555" fg:w="854"/><text x="52.2057%" y="446.50"></text></g><g><title>Z3_get_decl_kind (z3/z3core.py:2996) (935 samples, 0.64%)</title><rect x="52.5574%" y="436" width="0.6430%" height="15" fill="rgb(219,138,53)" fg:x="76430" fg:w="935"/><text x="52.8074%" y="446.50"></text></g><g><title>Check (z3/z3core.py:1564) (618 samples, 0.42%)</title><rect x="53.3090%" y="452" width="0.4250%" height="15" fill="rgb(211,51,23)" fg:x="77523" fg:w="618"/><text x="53.5590%" y="462.50"></text></g><g><title>Z3_get_decl_kind (z3/z3core.py:2997) (860 samples, 0.59%)</title><rect x="53.2003%" y="436" width="0.5914%" height="15" fill="rgb(247,221,28)" fg:x="77365" fg:w="860"/><text x="53.4503%" y="446.50"></text></g><g><title>__bool__ (z3/z3.py:376) (12,234 samples, 8.41%)</title><rect x="45.7510%" y="372" width="8.4128%" height="15" fill="rgb(251,222,45)" fg:x="66532" fg:w="12234"/><text x="46.0010%" y="382.50">__bool__ (z3..</text></g><g><title>is_false (z3/z3.py:1665) (12,097 samples, 8.32%)</title><rect x="45.8452%" y="388" width="8.3185%" height="15" fill="rgb(217,162,53)" fg:x="66669" fg:w="12097"/><text x="46.0952%" y="398.50">is_false (z3..</text></g><g><title>is_app_of (z3/z3.py:1403) (11,891 samples, 8.18%)</title><rect x="45.9869%" y="404" width="8.1769%" height="15" fill="rgb(229,93,14)" fg:x="66875" fg:w="11891"/><text x="46.2369%" y="414.50">is_app_of (..</text></g><g><title>kind (z3/z3.py:1080) (4,760 samples, 3.27%)</title><rect x="50.8905%" y="420" width="3.2732%" height="15" fill="rgb(209,67,49)" fg:x="74006" fg:w="4760"/><text x="51.1405%" y="430.50">kin..</text></g><g><title>ctx_ref (z3/z3.py:402) (498 samples, 0.34%)</title><rect x="53.8213%" y="436" width="0.3425%" height="15" fill="rgb(213,87,29)" fg:x="78268" fg:w="498"/><text x="54.0713%" y="446.50"></text></g><g><title>compute_hm_ (h2propagator.py:183) (29,029 samples, 19.96%)</title><rect x="34.2115%" y="340" width="19.9619%" height="15" fill="rgb(205,151,52)" fg:x="49751" fg:w="29029"/><text x="34.4615%" y="350.50">compute_hm_ (h2propagator.py:18..</text></g><g><title>&lt;listcomp&gt; (h2propagator.py:183) (28,989 samples, 19.93%)</title><rect x="34.2390%" y="356" width="19.9344%" height="15" fill="rgb(253,215,39)" fg:x="49791" fg:w="28989"/><text x="34.4890%" y="366.50">&lt;listcomp&gt; (h2propagator.py:183)</text></g><g><title>__hash__ (unified_planning/model/action.py:227) (156 samples, 0.11%)</title><rect x="54.3597%" y="356" width="0.1073%" height="15" fill="rgb(221,220,41)" fg:x="79051" fg:w="156"/><text x="54.6097%" y="366.50"></text></g><g><title>__hash__ (unified_planning/model/effect.py:134) (192 samples, 0.13%)</title><rect x="54.5825%" y="372" width="0.1320%" height="15" fill="rgb(218,133,21)" fg:x="79375" fg:w="192"/><text x="54.8325%" y="382.50"></text></g><g><title>__hash__ (unified_planning/model/effect.py:137) (166 samples, 0.11%)</title><rect x="54.8507%" y="372" width="0.1142%" height="15" fill="rgb(221,193,43)" fg:x="79765" fg:w="166"/><text x="55.1007%" y="382.50"></text></g><g><title>__hash__ (unified_planning/model/action.py:229) (858 samples, 0.59%)</title><rect x="54.4904%" y="356" width="0.5900%" height="15" fill="rgb(240,128,52)" fg:x="79241" fg:w="858"/><text x="54.7404%" y="366.50"></text></g><g><title>__hash__ (unified_planning/model/effect.py:138) (168 samples, 0.12%)</title><rect x="54.9649%" y="372" width="0.1155%" height="15" fill="rgb(253,114,12)" fg:x="79931" fg:w="168"/><text x="55.2149%" y="382.50"></text></g><g><title>regression (h2propagator.py:169) (221 samples, 0.15%)</title><rect x="55.1100%" y="356" width="0.1520%" height="15" fill="rgb(215,223,47)" fg:x="80142" fg:w="221"/><text x="55.3600%" y="366.50"></text></g><g><title>compute_hm_ (h2propagator.py:193) (1,609 samples, 1.11%)</title><rect x="54.1809%" y="340" width="1.1064%" height="15" fill="rgb(248,225,23)" fg:x="78791" fg:w="1609"/><text x="54.4309%" y="350.50"></text></g><g><title>compute_hm_ (h2propagator.py:183) (147 samples, 0.10%)</title><rect x="55.2915%" y="356" width="0.1011%" height="15" fill="rgb(250,108,0)" fg:x="80406" fg:w="147"/><text x="55.5415%" y="366.50"></text></g><g><title>&lt;listcomp&gt; (h2propagator.py:183) (147 samples, 0.10%)</title><rect x="55.2915%" y="372" width="0.1011%" height="15" fill="rgb(228,208,7)" fg:x="80406" fg:w="147"/><text x="55.5415%" y="382.50"></text></g><g><title>compute_hm_ (h2propagator.py:198) (283 samples, 0.19%)</title><rect x="55.2908%" y="340" width="0.1946%" height="15" fill="rgb(244,45,10)" fg:x="80405" fg:w="283"/><text x="55.5408%" y="350.50"></text></g><g><title>_ast_kind (z3/z3.py:492) (199 samples, 0.14%)</title><rect x="56.2590%" y="452" width="0.1368%" height="15" fill="rgb(207,125,25)" fg:x="81813" fg:w="199"/><text x="56.5090%" y="462.50"></text></g><g><title>_ast_kind (z3/z3.py:493) (167 samples, 0.11%)</title><rect x="56.3959%" y="452" width="0.1148%" height="15" fill="rgb(210,195,18)" fg:x="82012" fg:w="167"/><text x="56.6459%" y="462.50"></text></g><g><title>Z3_get_ast_kind (z3/z3core.py:3121) (907 samples, 0.62%)</title><rect x="56.6902%" y="468" width="0.6237%" height="15" fill="rgb(249,80,12)" fg:x="82440" fg:w="907"/><text x="56.9402%" y="478.50"></text></g><g><title>Check (z3/z3core.py:1564) (448 samples, 0.31%)</title><rect x="57.4129%" y="484" width="0.3081%" height="15" fill="rgb(221,65,9)" fg:x="83491" fg:w="448"/><text x="57.6629%" y="494.50"></text></g><g><title>Z3_get_ast_kind (z3/z3core.py:3122) (683 samples, 0.47%)</title><rect x="57.3139%" y="468" width="0.4697%" height="15" fill="rgb(235,49,36)" fg:x="83347" fg:w="683"/><text x="57.5639%" y="478.50"></text></g><g><title>is_app (z3/z3.py:1312) (2,433 samples, 1.67%)</title><rect x="56.1655%" y="436" width="1.6731%" height="15" fill="rgb(225,32,20)" fg:x="81677" fg:w="2433"/><text x="56.4155%" y="446.50"></text></g><g><title>_ast_kind (z3/z3.py:494) (1,931 samples, 1.33%)</title><rect x="56.5107%" y="452" width="1.3279%" height="15" fill="rgb(215,141,46)" fg:x="82179" fg:w="1931"/><text x="56.7607%" y="462.50"></text></g><g><title>_ast_kind (z3/z3.py:493) (163 samples, 0.11%)</title><rect x="58.3839%" y="468" width="0.1121%" height="15" fill="rgb(250,160,47)" fg:x="84903" fg:w="163"/><text x="58.6339%" y="478.50"></text></g><g><title>Z3_get_ast_kind (z3/z3core.py:3121) (766 samples, 0.53%)</title><rect x="58.6548%" y="484" width="0.5267%" height="15" fill="rgb(216,222,40)" fg:x="85297" fg:w="766"/><text x="58.9048%" y="494.50"></text></g><g><title>Check (z3/z3core.py:1564) (444 samples, 0.31%)</title><rect x="59.2613%" y="500" width="0.3053%" height="15" fill="rgb(234,217,39)" fg:x="86179" fg:w="444"/><text x="59.5113%" y="510.50"></text></g><g><title>Z3_get_ast_kind (z3/z3core.py:3122) (627 samples, 0.43%)</title><rect x="59.1816%" y="484" width="0.4312%" height="15" fill="rgb(207,178,40)" fg:x="86063" fg:w="627"/><text x="59.4316%" y="494.50"></text></g><g><title>is_app (z3/z3.py:1312) (2,129 samples, 1.46%)</title><rect x="58.1886%" y="452" width="1.4640%" height="15" fill="rgb(221,136,13)" fg:x="84619" fg:w="2129"/><text x="58.4386%" y="462.50"></text></g><g><title>_ast_kind (z3/z3.py:494) (1,682 samples, 1.16%)</title><rect x="58.4960%" y="468" width="1.1566%" height="15" fill="rgb(249,199,10)" fg:x="85066" fg:w="1682"/><text x="58.7460%" y="478.50"></text></g><g><title>kind (z3/z3.py:1079) (2,525 samples, 1.74%)</title><rect x="57.9912%" y="436" width="1.7363%" height="15" fill="rgb(249,222,13)" fg:x="84332" fg:w="2525"/><text x="58.2412%" y="446.50"></text></g><g><title>Z3_get_app_decl (z3/z3core.py:3076) (707 samples, 0.49%)</title><rect x="60.0583%" y="452" width="0.4862%" height="15" fill="rgb(244,185,38)" fg:x="87338" fg:w="707"/><text x="60.3083%" y="462.50"></text></g><g><title>Check (z3/z3core.py:1564) (472 samples, 0.32%)</title><rect x="60.6119%" y="468" width="0.3246%" height="15" fill="rgb(236,202,9)" fg:x="88143" fg:w="472"/><text x="60.8619%" y="478.50"></text></g><g><title>Z3_get_app_decl (z3/z3core.py:3077) (638 samples, 0.44%)</title><rect x="60.5445%" y="452" width="0.4387%" height="15" fill="rgb(250,229,37)" fg:x="88045" fg:w="638"/><text x="60.7945%" y="462.50"></text></g><g><title>Z3_get_decl_kind (z3/z3core.py:2996) (681 samples, 0.47%)</title><rect x="60.9935%" y="452" width="0.4683%" height="15" fill="rgb(206,174,23)" fg:x="88698" fg:w="681"/><text x="61.2435%" y="462.50"></text></g><g><title>Check (z3/z3core.py:1564) (493 samples, 0.34%)</title><rect x="61.5182%" y="468" width="0.3390%" height="15" fill="rgb(211,33,43)" fg:x="89461" fg:w="493"/><text x="61.7682%" y="478.50"></text></g><g><title>Z3_get_decl_kind (z3/z3core.py:2997) (648 samples, 0.45%)</title><rect x="61.4618%" y="452" width="0.4456%" height="15" fill="rgb(245,58,50)" fg:x="89379" fg:w="648"/><text x="61.7118%" y="462.50"></text></g><g><title>__bool__ (z3/z3.py:374) (9,350 samples, 6.43%)</title><rect x="55.7536%" y="388" width="6.4296%" height="15" fill="rgb(244,68,36)" fg:x="81078" fg:w="9350"/><text x="56.0036%" y="398.50">__bool__..</text></g><g><title>is_true (z3/z3.py:1651) (9,247 samples, 6.36%)</title><rect x="55.8244%" y="404" width="6.3587%" height="15" fill="rgb(232,229,15)" fg:x="81181" fg:w="9247"/><text x="56.0744%" y="414.50">is_true ..</text></g><g><title>is_app_of (z3/z3.py:1403) (9,114 samples, 6.27%)</title><rect x="55.9159%" y="420" width="6.2673%" height="15" fill="rgb(254,30,23)" fg:x="81314" fg:w="9114"/><text x="56.1659%" y="430.50">is_app_o..</text></g><g><title>kind (z3/z3.py:1080) (3,571 samples, 2.46%)</title><rect x="59.7276%" y="436" width="2.4556%" height="15" fill="rgb(235,160,14)" fg:x="86857" fg:w="3571"/><text x="59.9776%" y="446.50">ki..</text></g><g><title>ctx_ref (z3/z3.py:402) (378 samples, 0.26%)</title><rect x="61.9232%" y="452" width="0.2599%" height="15" fill="rgb(212,155,44)" fg:x="90050" fg:w="378"/><text x="62.1732%" y="462.50"></text></g><g><title>_ast_kind (z3/z3.py:493) (150 samples, 0.10%)</title><rect x="62.6907%" y="452" width="0.1031%" height="15" fill="rgb(226,2,50)" fg:x="91166" fg:w="150"/><text x="62.9407%" y="462.50"></text></g><g><title>Z3_get_ast_kind (z3/z3core.py:3121) (497 samples, 0.34%)</title><rect x="62.8942%" y="468" width="0.3418%" height="15" fill="rgb(234,177,6)" fg:x="91462" fg:w="497"/><text x="63.1442%" y="478.50"></text></g><g><title>Check (z3/z3core.py:1564) (368 samples, 0.25%)</title><rect x="63.3006%" y="484" width="0.2531%" height="15" fill="rgb(217,24,9)" fg:x="92053" fg:w="368"/><text x="63.5506%" y="494.50"></text></g><g><title>Z3_get_ast_kind (z3/z3core.py:3122) (511 samples, 0.35%)</title><rect x="63.2360%" y="468" width="0.3514%" height="15" fill="rgb(220,13,46)" fg:x="91959" fg:w="511"/><text x="63.4860%" y="478.50"></text></g><g><title>is_app (z3/z3.py:1312) (1,563 samples, 1.07%)</title><rect x="62.5401%" y="436" width="1.0748%" height="15" fill="rgb(239,221,27)" fg:x="90947" fg:w="1563"/><text x="62.7901%" y="446.50"></text></g><g><title>_ast_kind (z3/z3.py:494) (1,194 samples, 0.82%)</title><rect x="62.7938%" y="452" width="0.8211%" height="15" fill="rgb(222,198,25)" fg:x="91316" fg:w="1194"/><text x="63.0438%" y="462.50"></text></g><g><title>Z3_get_ast_kind (z3/z3core.py:3121) (621 samples, 0.43%)</title><rect x="64.3094%" y="484" width="0.4270%" height="15" fill="rgb(211,99,13)" fg:x="93520" fg:w="621"/><text x="64.5594%" y="494.50"></text></g><g><title>Check (z3/z3core.py:1564) (346 samples, 0.24%)</title><rect x="64.7921%" y="500" width="0.2379%" height="15" fill="rgb(232,111,31)" fg:x="94222" fg:w="346"/><text x="65.0421%" y="510.50"></text></g><g><title>Z3_get_ast_kind (z3/z3core.py:3122) (482 samples, 0.33%)</title><rect x="64.7364%" y="484" width="0.3314%" height="15" fill="rgb(245,82,37)" fg:x="94141" fg:w="482"/><text x="64.9864%" y="494.50"></text></g><g><title>is_app (z3/z3.py:1312) (1,755 samples, 1.21%)</title><rect x="63.8920%" y="452" width="1.2068%" height="15" fill="rgb(227,149,46)" fg:x="92913" fg:w="1755"/><text x="64.1420%" y="462.50"></text></g><g><title>_ast_kind (z3/z3.py:494) (1,361 samples, 0.94%)</title><rect x="64.1629%" y="468" width="0.9359%" height="15" fill="rgb(218,36,50)" fg:x="93307" fg:w="1361"/><text x="64.4129%" y="478.50"></text></g><g><title>kind (z3/z3.py:1079) (2,082 samples, 1.43%)</title><rect x="63.7249%" y="436" width="1.4317%" height="15" fill="rgb(226,80,48)" fg:x="92670" fg:w="2082"/><text x="63.9749%" y="446.50"></text></g><g><title>Z3_get_app_decl (z3/z3core.py:3076) (540 samples, 0.37%)</title><rect x="65.4282%" y="452" width="0.3713%" height="15" fill="rgb(238,224,15)" fg:x="95147" fg:w="540"/><text x="65.6782%" y="462.50"></text></g><g><title>Check (z3/z3core.py:1564) (363 samples, 0.25%)</title><rect x="65.8525%" y="468" width="0.2496%" height="15" fill="rgb(241,136,10)" fg:x="95764" fg:w="363"/><text x="66.1025%" y="478.50"></text></g><g><title>Z3_get_app_decl (z3/z3core.py:3077) (494 samples, 0.34%)</title><rect x="65.7995%" y="452" width="0.3397%" height="15" fill="rgb(208,32,45)" fg:x="95687" fg:w="494"/><text x="66.0495%" y="462.50"></text></g><g><title>Z3_get_decl_kind (z3/z3core.py:2996) (517 samples, 0.36%)</title><rect x="66.1496%" y="452" width="0.3555%" height="15" fill="rgb(207,135,9)" fg:x="96196" fg:w="517"/><text x="66.3996%" y="462.50"></text></g><g><title>Check (z3/z3core.py:1564) (337 samples, 0.23%)</title><rect x="66.5594%" y="468" width="0.2317%" height="15" fill="rgb(206,86,44)" fg:x="96792" fg:w="337"/><text x="66.8094%" y="478.50"></text></g><g><title>Z3_get_decl_kind (z3/z3core.py:2997) (471 samples, 0.32%)</title><rect x="66.5051%" y="452" width="0.3239%" height="15" fill="rgb(245,177,15)" fg:x="96713" fg:w="471"/><text x="66.7551%" y="462.50"></text></g><g><title>__bool__ (z3/z3.py:376) (7,089 samples, 4.87%)</title><rect x="62.1845%" y="388" width="4.8748%" height="15" fill="rgb(206,64,50)" fg:x="90430" fg:w="7089"/><text x="62.4345%" y="398.50">__bool..</text></g><g><title>is_false (z3/z3.py:1665) (7,004 samples, 4.82%)</title><rect x="62.2430%" y="404" width="4.8163%" height="15" fill="rgb(234,36,40)" fg:x="90515" fg:w="7004"/><text x="62.4930%" y="414.50">is_fal..</text></g><g><title>is_app_of (z3/z3.py:1403) (6,890 samples, 4.74%)</title><rect x="62.3214%" y="420" width="4.7379%" height="15" fill="rgb(213,64,8)" fg:x="90629" fg:w="6890"/><text x="62.5714%" y="430.50">is_app..</text></g><g><title>kind (z3/z3.py:1080) (2,767 samples, 1.90%)</title><rect x="65.1566%" y="436" width="1.9027%" height="15" fill="rgb(210,75,36)" fg:x="94752" fg:w="2767"/><text x="65.4066%" y="446.50">k..</text></g><g><title>ctx_ref (z3/z3.py:402) (317 samples, 0.22%)</title><rect x="66.8413%" y="452" width="0.2180%" height="15" fill="rgb(229,88,21)" fg:x="97202" fg:w="317"/><text x="67.0913%" y="462.50"></text></g><g><title>compute_hm_ (h2propagator.py:183) (16,783 samples, 11.54%)</title><rect x="55.5212%" y="356" width="11.5409%" height="15" fill="rgb(252,204,47)" fg:x="80740" fg:w="16783"/><text x="55.7712%" y="366.50">compute_hm_ (h2pr..</text></g><g><title>&lt;listcomp&gt; (h2propagator.py:183) (16,748 samples, 11.52%)</title><rect x="55.5452%" y="372" width="11.5168%" height="15" fill="rgb(208,77,27)" fg:x="80775" fg:w="16748"/><text x="55.7952%" y="382.50">&lt;listcomp&gt; (h2pro..</text></g><g><title>__hash__ (unified_planning/model/action.py:223) (450 samples, 0.31%)</title><rect x="67.6878%" y="372" width="0.3094%" height="15" fill="rgb(221,76,26)" fg:x="98433" fg:w="450"/><text x="67.9378%" y="382.50"></text></g><g><title>__hash__ (unified_planning/model/action.py:224) (741 samples, 0.51%)</title><rect x="67.9973%" y="372" width="0.5096%" height="15" fill="rgb(225,139,18)" fg:x="98883" fg:w="741"/><text x="68.2473%" y="382.50"></text></g><g><title>__hash__ (unified_planning/model/action.py:226) (263 samples, 0.18%)</title><rect x="68.5068%" y="372" width="0.1809%" height="15" fill="rgb(230,137,11)" fg:x="99624" fg:w="263"/><text x="68.7568%" y="382.50"></text></g><g><title>__hash__ (unified_planning/model/action.py:227) (1,195 samples, 0.82%)</title><rect x="68.6877%" y="372" width="0.8217%" height="15" fill="rgb(212,28,1)" fg:x="99887" fg:w="1195"/><text x="68.9377%" y="382.50"></text></g><g><title>__hash__ (unified_planning/model/action.py:228) (319 samples, 0.22%)</title><rect x="69.5094%" y="372" width="0.2194%" height="15" fill="rgb(248,164,17)" fg:x="101082" fg:w="319"/><text x="69.7594%" y="382.50"></text></g><g><title>__hash__ (unified_planning/model/effect.py:134) (1,472 samples, 1.01%)</title><rect x="70.6303%" y="388" width="1.0122%" height="15" fill="rgb(222,171,42)" fg:x="102712" fg:w="1472"/><text x="70.8803%" y="398.50"></text></g><g><title>__hash__ (unified_planning/model/fnode.py:54) (181 samples, 0.12%)</title><rect x="71.5181%" y="404" width="0.1245%" height="15" fill="rgb(243,84,45)" fg:x="104003" fg:w="181"/><text x="71.7681%" y="414.50"></text></g><g><title>__hash__ (unified_planning/model/effect.py:135) (853 samples, 0.59%)</title><rect x="71.6425%" y="388" width="0.5866%" height="15" fill="rgb(252,49,23)" fg:x="104184" fg:w="853"/><text x="71.8925%" y="398.50"></text></g><g><title>__hash__ (unified_planning/model/fnode.py:54) (183 samples, 0.13%)</title><rect x="72.1033%" y="404" width="0.1258%" height="15" fill="rgb(215,19,7)" fg:x="104854" fg:w="183"/><text x="72.3533%" y="414.50"></text></g><g><title>__hash__ (unified_planning/model/effect.py:136) (741 samples, 0.51%)</title><rect x="72.2291%" y="388" width="0.5096%" height="15" fill="rgb(238,81,41)" fg:x="105037" fg:w="741"/><text x="72.4791%" y="398.50"></text></g><g><title>__hash__ (unified_planning/model/effect.py:137) (1,071 samples, 0.74%)</title><rect x="72.7387%" y="388" width="0.7365%" height="15" fill="rgb(210,199,37)" fg:x="105778" fg:w="1071"/><text x="72.9887%" y="398.50"></text></g><g><title>__hash__ (enum.py:775) (394 samples, 0.27%)</title><rect x="73.2042%" y="404" width="0.2709%" height="15" fill="rgb(244,192,49)" fg:x="106455" fg:w="394"/><text x="73.4542%" y="414.50"></text></g><g><title>__hash__ (unified_planning/model/action.py:229) (7,777 samples, 5.35%)</title><rect x="69.7288%" y="372" width="5.3479%" height="15" fill="rgb(226,211,11)" fg:x="101401" fg:w="7777"/><text x="69.9788%" y="382.50">__hash_..</text></g><g><title>__hash__ (unified_planning/model/effect.py:138) (2,329 samples, 1.60%)</title><rect x="73.4751%" y="388" width="1.6015%" height="15" fill="rgb(236,162,54)" fg:x="106849" fg:w="2329"/><text x="73.7251%" y="398.50"></text></g><g><title>__hash__ (unified_planning/model/action.py:230) (429 samples, 0.30%)</title><rect x="75.0767%" y="372" width="0.2950%" height="15" fill="rgb(220,229,9)" fg:x="109178" fg:w="429"/><text x="75.3267%" y="382.50"></text></g><g><title>__hash__ (unified_planning/model/action.py:223) (183 samples, 0.13%)</title><rect x="75.9259%" y="388" width="0.1258%" height="15" fill="rgb(250,87,22)" fg:x="110413" fg:w="183"/><text x="76.1759%" y="398.50"></text></g><g><title>__hash__ (unified_planning/model/action.py:224) (345 samples, 0.24%)</title><rect x="76.0518%" y="388" width="0.2372%" height="15" fill="rgb(239,43,17)" fg:x="110596" fg:w="345"/><text x="76.3018%" y="398.50"></text></g><g><title>__hash__ (unified_planning/model/action.py:226) (182 samples, 0.13%)</title><rect x="76.2890%" y="388" width="0.1252%" height="15" fill="rgb(231,177,25)" fg:x="110941" fg:w="182"/><text x="76.5390%" y="398.50"></text></g><g><title>__hash__ (unified_planning/model/action.py:227) (794 samples, 0.55%)</title><rect x="76.4142%" y="388" width="0.5460%" height="15" fill="rgb(219,179,1)" fg:x="111123" fg:w="794"/><text x="76.6642%" y="398.50"></text></g><g><title>__hash__ (unified_planning/model/action.py:228) (229 samples, 0.16%)</title><rect x="76.9602%" y="388" width="0.1575%" height="15" fill="rgb(238,219,53)" fg:x="111917" fg:w="229"/><text x="77.2102%" y="398.50"></text></g><g><title>__hash__ (unified_planning/model/effect.py:134) (1,106 samples, 0.76%)</title><rect x="77.6684%" y="404" width="0.7605%" height="15" fill="rgb(232,167,36)" fg:x="112947" fg:w="1106"/><text x="77.9184%" y="414.50"></text></g><g><title>__hash__ (unified_planning/model/fnode.py:54) (149 samples, 0.10%)</title><rect x="78.3265%" y="420" width="0.1025%" height="15" fill="rgb(244,19,51)" fg:x="113904" fg:w="149"/><text x="78.5765%" y="430.50"></text></g><g><title>__hash__ (unified_planning/model/effect.py:135) (665 samples, 0.46%)</title><rect x="78.4290%" y="404" width="0.4573%" height="15" fill="rgb(224,6,22)" fg:x="114053" fg:w="665"/><text x="78.6790%" y="414.50"></text></g><g><title>__hash__ (unified_planning/model/effect.py:136) (601 samples, 0.41%)</title><rect x="78.8863%" y="404" width="0.4133%" height="15" fill="rgb(224,145,5)" fg:x="114718" fg:w="601"/><text x="79.1363%" y="414.50"></text></g><g><title>__hash__ (unified_planning/model/effect.py:137) (875 samples, 0.60%)</title><rect x="79.2996%" y="404" width="0.6017%" height="15" fill="rgb(234,130,49)" fg:x="115319" fg:w="875"/><text x="79.5496%" y="414.50"></text></g><g><title>__hash__ (enum.py:775) (299 samples, 0.21%)</title><rect x="79.6956%" y="420" width="0.2056%" height="15" fill="rgb(254,6,2)" fg:x="115895" fg:w="299"/><text x="79.9456%" y="430.50"></text></g><g><title>__hash__ (unified_planning/model/action.py:229) (4,983 samples, 3.43%)</title><rect x="77.1176%" y="388" width="3.4266%" height="15" fill="rgb(208,96,46)" fg:x="112146" fg:w="4983"/><text x="77.3676%" y="398.50">__h..</text></g><g><title>__hash__ (unified_planning/model/effect.py:138) (935 samples, 0.64%)</title><rect x="79.9013%" y="404" width="0.6430%" height="15" fill="rgb(239,3,39)" fg:x="116194" fg:w="935"/><text x="80.1513%" y="414.50"></text></g><g><title>__hash__ (unified_planning/model/action.py:230) (274 samples, 0.19%)</title><rect x="80.5442%" y="388" width="0.1884%" height="15" fill="rgb(233,210,1)" fg:x="117129" fg:w="274"/><text x="80.7942%" y="398.50"></text></g><g><title>str_repr (pyPMT/pypmt/encoders/utilities.py:13) (187 samples, 0.13%)</title><rect x="80.7340%" y="388" width="0.1286%" height="15" fill="rgb(244,137,37)" fg:x="117405" fg:w="187"/><text x="80.9840%" y="398.50"></text></g><g><title>str_repr (pyPMT/pypmt/encoders/utilities.py:20) (265 samples, 0.18%)</title><rect x="80.9149%" y="388" width="0.1822%" height="15" fill="rgb(240,136,2)" fg:x="117668" fg:w="265"/><text x="81.1649%" y="398.50"></text></g><g><title>str_repr (pyPMT/pypmt/encoders/utilities.py:22) (564 samples, 0.39%)</title><rect x="81.0971%" y="388" width="0.3878%" height="15" fill="rgb(239,18,37)" fg:x="117933" fg:w="564"/><text x="81.3471%" y="398.50"></text></g><g><title>parameters (unified_planning/model/action.py:112) (342 samples, 0.24%)</title><rect x="81.2497%" y="404" width="0.2352%" height="15" fill="rgb(218,185,22)" fg:x="118155" fg:w="342"/><text x="81.4997%" y="414.50"></text></g><g><title>regression (h2propagator.py:169) (8,962 samples, 6.16%)</title><rect x="75.3882%" y="372" width="6.1628%" height="15" fill="rgb(225,218,4)" fg:x="109631" fg:w="8962"/><text x="75.6382%" y="382.50">regressi..</text></g><g><title>regression (h2propagator.py:170) (912 samples, 0.63%)</title><rect x="81.5509%" y="372" width="0.6271%" height="15" fill="rgb(230,182,32)" fg:x="118593" fg:w="912"/><text x="81.8009%" y="382.50"></text></g><g><title>&lt;listcomp&gt; (h2propagator.py:170) (366 samples, 0.25%)</title><rect x="81.9264%" y="388" width="0.2517%" height="15" fill="rgb(242,56,43)" fg:x="119139" fg:w="366"/><text x="82.1764%" y="398.50"></text></g><g><title>regression (h2propagator.py:171) (655 samples, 0.45%)</title><rect x="82.1781%" y="372" width="0.4504%" height="15" fill="rgb(233,99,24)" fg:x="119505" fg:w="655"/><text x="82.4281%" y="382.50"></text></g><g><title>compute_hm_ (h2propagator.py:193) (22,637 samples, 15.57%)</title><rect x="67.1013%" y="356" width="15.5664%" height="15" fill="rgb(234,209,42)" fg:x="97580" fg:w="22637"/><text x="67.3513%" y="366.50">compute_hm_ (h2propagato..</text></g><g><title>Z3_get_ast_kind (z3/z3core.py:3121) (280 samples, 0.19%)</title><rect x="83.1394%" y="484" width="0.1925%" height="15" fill="rgb(227,7,12)" fg:x="120903" fg:w="280"/><text x="83.3894%" y="494.50"></text></g><g><title>Check (z3/z3core.py:1564) (169 samples, 0.12%)</title><rect x="83.3636%" y="500" width="0.1162%" height="15" fill="rgb(245,203,43)" fg:x="121229" fg:w="169"/><text x="83.6136%" y="510.50"></text></g><g><title>Z3_get_ast_kind (z3/z3core.py:3122) (244 samples, 0.17%)</title><rect x="83.3320%" y="484" width="0.1678%" height="15" fill="rgb(238,205,33)" fg:x="121183" fg:w="244"/><text x="83.5820%" y="494.50"></text></g><g><title>is_app (z3/z3.py:1312) (814 samples, 0.56%)</title><rect x="82.9592%" y="452" width="0.5598%" height="15" fill="rgb(231,56,7)" fg:x="120641" fg:w="814"/><text x="83.2092%" y="462.50"></text></g><g><title>_ast_kind (z3/z3.py:494) (638 samples, 0.44%)</title><rect x="83.0803%" y="468" width="0.4387%" height="15" fill="rgb(244,186,29)" fg:x="120817" fg:w="638"/><text x="83.3303%" y="478.50"></text></g><g><title>Z3_get_ast_kind (z3/z3core.py:3121) (248 samples, 0.17%)</title><rect x="83.8113%" y="500" width="0.1705%" height="15" fill="rgb(234,111,31)" fg:x="121880" fg:w="248"/><text x="84.0613%" y="510.50"></text></g><g><title>Check (z3/z3core.py:1564) (172 samples, 0.12%)</title><rect x="84.0086%" y="516" width="0.1183%" height="15" fill="rgb(241,149,10)" fg:x="122167" fg:w="172"/><text x="84.2586%" y="526.50"></text></g><g><title>Z3_get_ast_kind (z3/z3core.py:3122) (252 samples, 0.17%)</title><rect x="83.9818%" y="500" width="0.1733%" height="15" fill="rgb(249,206,44)" fg:x="122128" fg:w="252"/><text x="84.2318%" y="510.50"></text></g><g><title>is_app (z3/z3.py:1312) (739 samples, 0.51%)</title><rect x="83.6558%" y="468" width="0.5082%" height="15" fill="rgb(251,153,30)" fg:x="121654" fg:w="739"/><text x="83.9058%" y="478.50"></text></g><g><title>_ast_kind (z3/z3.py:494) (581 samples, 0.40%)</title><rect x="83.7645%" y="484" width="0.3995%" height="15" fill="rgb(239,152,38)" fg:x="121812" fg:w="581"/><text x="84.0145%" y="494.50"></text></g><g><title>kind (z3/z3.py:1079) (909 samples, 0.63%)</title><rect x="83.5658%" y="452" width="0.6251%" height="15" fill="rgb(249,139,47)" fg:x="121523" fg:w="909"/><text x="83.8158%" y="462.50"></text></g><g><title>Z3_get_app_decl (z3/z3core.py:3076) (262 samples, 0.18%)</title><rect x="84.3311%" y="468" width="0.1802%" height="15" fill="rgb(244,64,35)" fg:x="122636" fg:w="262"/><text x="84.5811%" y="478.50"></text></g><g><title>Check (z3/z3core.py:1564) (154 samples, 0.11%)</title><rect x="84.5333%" y="484" width="0.1059%" height="15" fill="rgb(216,46,15)" fg:x="122930" fg:w="154"/><text x="84.7833%" y="494.50"></text></g><g><title>Z3_get_app_decl (z3/z3core.py:3077) (224 samples, 0.15%)</title><rect x="84.5113%" y="468" width="0.1540%" height="15" fill="rgb(250,74,19)" fg:x="122898" fg:w="224"/><text x="84.7613%" y="478.50"></text></g><g><title>Z3_get_decl_kind (z3/z3core.py:2996) (225 samples, 0.15%)</title><rect x="84.6729%" y="468" width="0.1547%" height="15" fill="rgb(249,42,33)" fg:x="123133" fg:w="225"/><text x="84.9229%" y="478.50"></text></g><g><title>Check (z3/z3core.py:1564) (191 samples, 0.13%)</title><rect x="84.8530%" y="484" width="0.1313%" height="15" fill="rgb(242,149,17)" fg:x="123395" fg:w="191"/><text x="85.1030%" y="494.50"></text></g><g><title>Z3_get_decl_kind (z3/z3core.py:2997) (262 samples, 0.18%)</title><rect x="84.8276%" y="468" width="0.1802%" height="15" fill="rgb(244,29,21)" fg:x="123358" fg:w="262"/><text x="85.0776%" y="478.50"></text></g><g><title>__bool__ (z3/z3.py:374) (3,341 samples, 2.30%)</title><rect x="82.8142%" y="404" width="2.2975%" height="15" fill="rgb(220,130,37)" fg:x="120430" fg:w="3341"/><text x="83.0642%" y="414.50">_..</text></g><g><title>is_true (z3/z3.py:1651) (3,291 samples, 2.26%)</title><rect x="82.8485%" y="420" width="2.2631%" height="15" fill="rgb(211,67,2)" fg:x="120480" fg:w="3291"/><text x="83.0985%" y="430.50">i..</text></g><g><title>is_app_of (z3/z3.py:1403) (3,243 samples, 2.23%)</title><rect x="82.8815%" y="436" width="2.2301%" height="15" fill="rgb(235,68,52)" fg:x="120528" fg:w="3243"/><text x="83.1315%" y="446.50">i..</text></g><g><title>kind (z3/z3.py:1080) (1,339 samples, 0.92%)</title><rect x="84.1908%" y="452" width="0.9208%" height="15" fill="rgb(246,142,3)" fg:x="122432" fg:w="1339"/><text x="84.4408%" y="462.50"></text></g><g><title>Z3_get_ast_kind (z3/z3core.py:3121) (206 samples, 0.14%)</title><rect x="85.3647%" y="484" width="0.1417%" height="15" fill="rgb(241,25,7)" fg:x="124139" fg:w="206"/><text x="85.6147%" y="494.50"></text></g><g><title>Z3_get_ast_kind (z3/z3core.py:3122) (184 samples, 0.13%)</title><rect x="85.5063%" y="484" width="0.1265%" height="15" fill="rgb(242,119,39)" fg:x="124345" fg:w="184"/><text x="85.7563%" y="494.50"></text></g><g><title>is_app (z3/z3.py:1312) (595 samples, 0.41%)</title><rect x="85.2354%" y="452" width="0.4092%" height="15" fill="rgb(241,98,45)" fg:x="123951" fg:w="595"/><text x="85.4854%" y="462.50"></text></g><g><title>_ast_kind (z3/z3.py:494) (470 samples, 0.32%)</title><rect x="85.3213%" y="468" width="0.3232%" height="15" fill="rgb(254,28,30)" fg:x="124076" fg:w="470"/><text x="85.5713%" y="478.50"></text></g><g><title>Z3_get_ast_kind (z3/z3core.py:3121) (242 samples, 0.17%)</title><rect x="85.8866%" y="500" width="0.1664%" height="15" fill="rgb(241,142,54)" fg:x="124898" fg:w="242"/><text x="86.1366%" y="510.50"></text></g><g><title>Z3_get_ast_kind (z3/z3core.py:3122) (217 samples, 0.15%)</title><rect x="86.0530%" y="500" width="0.1492%" height="15" fill="rgb(222,85,15)" fg:x="125140" fg:w="217"/><text x="86.3030%" y="510.50"></text></g><g><title>is_app (z3/z3.py:1312) (674 samples, 0.46%)</title><rect x="85.7511%" y="468" width="0.4635%" height="15" fill="rgb(210,85,47)" fg:x="124701" fg:w="674"/><text x="86.0011%" y="478.50"></text></g><g><title>_ast_kind (z3/z3.py:494) (544 samples, 0.37%)</title><rect x="85.8405%" y="484" width="0.3741%" height="15" fill="rgb(224,206,25)" fg:x="124831" fg:w="544"/><text x="86.0905%" y="494.50"></text></g><g><title>kind (z3/z3.py:1079) (786 samples, 0.54%)</title><rect x="85.6920%" y="452" width="0.5405%" height="15" fill="rgb(243,201,19)" fg:x="124615" fg:w="786"/><text x="85.9420%" y="462.50"></text></g><g><title>Z3_get_app_decl (z3/z3core.py:3076) (167 samples, 0.11%)</title><rect x="86.3288%" y="468" width="0.1148%" height="15" fill="rgb(236,59,4)" fg:x="125541" fg:w="167"/><text x="86.5788%" y="478.50"></text></g><g><title>Z3_get_app_decl (z3/z3core.py:3077) (164 samples, 0.11%)</title><rect x="86.4436%" y="468" width="0.1128%" height="15" fill="rgb(254,179,45)" fg:x="125708" fg:w="164"/><text x="86.6936%" y="478.50"></text></g><g><title>Z3_get_decl_kind (z3/z3core.py:2996) (201 samples, 0.14%)</title><rect x="86.5591%" y="468" width="0.1382%" height="15" fill="rgb(226,14,10)" fg:x="125876" fg:w="201"/><text x="86.8091%" y="478.50"></text></g><g><title>Check (z3/z3core.py:1564) (148 samples, 0.10%)</title><rect x="86.7290%" y="484" width="0.1018%" height="15" fill="rgb(244,27,41)" fg:x="126123" fg:w="148"/><text x="86.9790%" y="494.50"></text></g><g><title>Z3_get_decl_kind (z3/z3core.py:2997) (218 samples, 0.15%)</title><rect x="86.6973%" y="468" width="0.1499%" height="15" fill="rgb(235,35,32)" fg:x="126077" fg:w="218"/><text x="86.9473%" y="478.50"></text></g><g><title>__bool__ (z3/z3.py:376) (2,645 samples, 1.82%)</title><rect x="85.1123%" y="404" width="1.8188%" height="15" fill="rgb(218,68,31)" fg:x="123772" fg:w="2645"/><text x="85.3623%" y="414.50">_..</text></g><g><title>is_false (z3/z3.py:1665) (2,607 samples, 1.79%)</title><rect x="85.1384%" y="420" width="1.7927%" height="15" fill="rgb(207,120,37)" fg:x="123810" fg:w="2607"/><text x="85.3884%" y="430.50">i..</text></g><g><title>is_app_of (z3/z3.py:1403) (2,561 samples, 1.76%)</title><rect x="85.1701%" y="436" width="1.7611%" height="15" fill="rgb(227,98,0)" fg:x="123856" fg:w="2561"/><text x="85.4201%" y="446.50"></text></g><g><title>kind (z3/z3.py:1080) (1,016 samples, 0.70%)</title><rect x="86.2325%" y="452" width="0.6987%" height="15" fill="rgb(207,7,3)" fg:x="125401" fg:w="1016"/><text x="86.4825%" y="462.50"></text></g><g><title>compute_hm_ (h2propagator.py:183) (6,112 samples, 4.20%)</title><rect x="82.7296%" y="372" width="4.2029%" height="15" fill="rgb(206,98,19)" fg:x="120307" fg:w="6112"/><text x="82.9796%" y="382.50">compu..</text></g><g><title>&lt;listcomp&gt; (h2propagator.py:183) (6,099 samples, 4.19%)</title><rect x="82.7385%" y="388" width="4.1940%" height="15" fill="rgb(217,5,26)" fg:x="120320" fg:w="6099"/><text x="82.9885%" y="398.50">&lt;list..</text></g><g><title>__hash__ (unified_planning/model/action.py:229) (338 samples, 0.23%)</title><rect x="87.0363%" y="388" width="0.2324%" height="15" fill="rgb(235,190,38)" fg:x="126570" fg:w="338"/><text x="87.2863%" y="398.50"></text></g><g><title>compute_hm_ (h2propagator.py:193) (610 samples, 0.42%)</title><rect x="86.9353%" y="372" width="0.4195%" height="15" fill="rgb(247,86,24)" fg:x="126423" fg:w="610"/><text x="87.1853%" y="382.50"></text></g><g><title>compute_hm_ (h2propagator.py:198) (277 samples, 0.19%)</title><rect x="87.3561%" y="372" width="0.1905%" height="15" fill="rgb(205,101,16)" fg:x="127035" fg:w="277"/><text x="87.6061%" y="382.50"></text></g><g><title>Z3_get_ast_kind (z3/z3core.py:3121) (147 samples, 0.10%)</title><rect x="87.7508%" y="500" width="0.1011%" height="15" fill="rgb(246,168,33)" fg:x="127609" fg:w="147"/><text x="88.0008%" y="510.50"></text></g><g><title>is_app (z3/z3.py:1312) (398 samples, 0.27%)</title><rect x="87.6649%" y="468" width="0.2737%" height="15" fill="rgb(231,114,1)" fg:x="127484" fg:w="398"/><text x="87.9149%" y="478.50"></text></g><g><title>_ast_kind (z3/z3.py:494) (318 samples, 0.22%)</title><rect x="87.7199%" y="484" width="0.2187%" height="15" fill="rgb(207,184,53)" fg:x="127564" fg:w="318"/><text x="87.9699%" y="494.50"></text></g><g><title>is_app (z3/z3.py:1312) (348 samples, 0.24%)</title><rect x="87.9894%" y="484" width="0.2393%" height="15" fill="rgb(224,95,51)" fg:x="127956" fg:w="348"/><text x="88.2394%" y="494.50"></text></g><g><title>_ast_kind (z3/z3.py:494) (285 samples, 0.20%)</title><rect x="88.0328%" y="500" width="0.1960%" height="15" fill="rgb(212,188,45)" fg:x="128019" fg:w="285"/><text x="88.2828%" y="510.50"></text></g><g><title>kind (z3/z3.py:1079) (405 samples, 0.28%)</title><rect x="87.9592%" y="468" width="0.2785%" height="15" fill="rgb(223,154,38)" fg:x="127912" fg:w="405"/><text x="88.2092%" y="478.50"></text></g><g><title>__bool__ (z3/z3.py:374) (1,488 samples, 1.02%)</title><rect x="87.5954%" y="420" width="1.0232%" height="15" fill="rgb(251,22,52)" fg:x="127383" fg:w="1488"/><text x="87.8454%" y="430.50"></text></g><g><title>is_true (z3/z3.py:1651) (1,468 samples, 1.01%)</title><rect x="87.6092%" y="436" width="1.0095%" height="15" fill="rgb(229,209,22)" fg:x="127403" fg:w="1468"/><text x="87.8592%" y="446.50"></text></g><g><title>is_app_of (z3/z3.py:1403) (1,446 samples, 0.99%)</title><rect x="87.6243%" y="452" width="0.9943%" height="15" fill="rgb(234,138,34)" fg:x="127425" fg:w="1446"/><text x="87.8743%" y="462.50"></text></g><g><title>kind (z3/z3.py:1080) (554 samples, 0.38%)</title><rect x="88.2377%" y="468" width="0.3810%" height="15" fill="rgb(212,95,11)" fg:x="128317" fg:w="554"/><text x="88.4877%" y="478.50"></text></g><g><title>is_app (z3/z3.py:1312) (272 samples, 0.19%)</title><rect x="88.6812%" y="468" width="0.1870%" height="15" fill="rgb(240,179,47)" fg:x="128962" fg:w="272"/><text x="88.9312%" y="478.50"></text></g><g><title>_ast_kind (z3/z3.py:494) (212 samples, 0.15%)</title><rect x="88.7225%" y="484" width="0.1458%" height="15" fill="rgb(240,163,11)" fg:x="129022" fg:w="212"/><text x="88.9725%" y="494.50"></text></g><g><title>is_app (z3/z3.py:1312) (287 samples, 0.20%)</title><rect x="88.9150%" y="484" width="0.1974%" height="15" fill="rgb(236,37,12)" fg:x="129302" fg:w="287"/><text x="89.1650%" y="494.50"></text></g><g><title>_ast_kind (z3/z3.py:494) (237 samples, 0.16%)</title><rect x="88.9494%" y="500" width="0.1630%" height="15" fill="rgb(232,164,16)" fg:x="129352" fg:w="237"/><text x="89.1994%" y="510.50"></text></g><g><title>kind (z3/z3.py:1079) (345 samples, 0.24%)</title><rect x="88.8848%" y="468" width="0.2372%" height="15" fill="rgb(244,205,15)" fg:x="129258" fg:w="345"/><text x="89.1348%" y="478.50"></text></g><g><title>compute_hm_ (h2propagator.py:183) (2,741 samples, 1.88%)</title><rect x="87.5528%" y="388" width="1.8849%" height="15" fill="rgb(223,117,47)" fg:x="127321" fg:w="2741"/><text x="87.8028%" y="398.50">c..</text></g><g><title>&lt;listcomp&gt; (h2propagator.py:183) (2,736 samples, 1.88%)</title><rect x="87.5562%" y="404" width="1.8814%" height="15" fill="rgb(244,107,35)" fg:x="127326" fg:w="2736"/><text x="87.8062%" y="414.50">&lt;..</text></g><g><title>__bool__ (z3/z3.py:376) (1,191 samples, 0.82%)</title><rect x="88.6186%" y="420" width="0.8190%" height="15" fill="rgb(205,140,8)" fg:x="128871" fg:w="1191"/><text x="88.8686%" y="430.50"></text></g><g><title>is_false (z3/z3.py:1665) (1,177 samples, 0.81%)</title><rect x="88.6283%" y="436" width="0.8094%" height="15" fill="rgb(228,84,46)" fg:x="128885" fg:w="1177"/><text x="88.8783%" y="446.50"></text></g><g><title>is_app_of (z3/z3.py:1403) (1,151 samples, 0.79%)</title><rect x="88.6461%" y="452" width="0.7915%" height="15" fill="rgb(254,188,9)" fg:x="128911" fg:w="1151"/><text x="88.8961%" y="462.50"></text></g><g><title>kind (z3/z3.py:1080) (459 samples, 0.32%)</title><rect x="89.1220%" y="468" width="0.3156%" height="15" fill="rgb(206,112,54)" fg:x="129603" fg:w="459"/><text x="89.3720%" y="478.50"></text></g><g><title>__hash__ (unified_planning/model/effect.py:134) (249 samples, 0.17%)</title><rect x="89.8915%" y="420" width="0.1712%" height="15" fill="rgb(216,84,49)" fg:x="130722" fg:w="249"/><text x="90.1415%" y="430.50"></text></g><g><title>__hash__ (unified_planning/model/action.py:229) (1,083 samples, 0.74%)</title><rect x="89.7815%" y="404" width="0.7447%" height="15" fill="rgb(214,194,35)" fg:x="130562" fg:w="1083"/><text x="90.0315%" y="414.50"></text></g><g><title>__hash__ (unified_planning/model/effect.py:138) (299 samples, 0.21%)</title><rect x="90.3206%" y="420" width="0.2056%" height="15" fill="rgb(249,28,3)" fg:x="131346" fg:w="299"/><text x="90.5706%" y="430.50"></text></g><g><title>__hash__ (unified_planning/model/action.py:229) (459 samples, 0.32%)</title><rect x="90.7235%" y="420" width="0.3156%" height="15" fill="rgb(222,56,52)" fg:x="131932" fg:w="459"/><text x="90.9735%" y="430.50"></text></g><g><title>regression (h2propagator.py:169) (838 samples, 0.58%)</title><rect x="90.5606%" y="404" width="0.5763%" height="15" fill="rgb(245,217,50)" fg:x="131695" fg:w="838"/><text x="90.8106%" y="414.50"></text></g><g><title>compute_hm_ (h2propagator.py:193) (2,644 samples, 1.82%)</title><rect x="89.4452%" y="388" width="1.8182%" height="15" fill="rgb(213,201,24)" fg:x="130073" fg:w="2644"/><text x="89.6952%" y="398.50">c..</text></g><g><title>is_app (z3/z3.py:1312) (429 samples, 0.30%)</title><rect x="91.3837%" y="484" width="0.2950%" height="15" fill="rgb(248,116,28)" fg:x="132892" fg:w="429"/><text x="91.6337%" y="494.50"></text></g><g><title>_ast_kind (z3/z3.py:494) (341 samples, 0.23%)</title><rect x="91.4442%" y="500" width="0.2345%" height="15" fill="rgb(219,72,43)" fg:x="132980" fg:w="341"/><text x="91.6942%" y="510.50"></text></g><g><title>is_app (z3/z3.py:1312) (385 samples, 0.26%)</title><rect x="91.7454%" y="500" width="0.2647%" height="15" fill="rgb(209,138,14)" fg:x="133418" fg:w="385"/><text x="91.9954%" y="510.50"></text></g><g><title>_ast_kind (z3/z3.py:494) (297 samples, 0.20%)</title><rect x="91.8059%" y="516" width="0.2042%" height="15" fill="rgb(222,18,33)" fg:x="133506" fg:w="297"/><text x="92.0559%" y="526.50"></text></g><g><title>kind (z3/z3.py:1079) (465 samples, 0.32%)</title><rect x="91.7055%" y="484" width="0.3198%" height="15" fill="rgb(213,199,7)" fg:x="133360" fg:w="465"/><text x="91.9555%" y="494.50"></text></g><g><title>__bool__ (z3/z3.py:374) (1,725 samples, 1.19%)</title><rect x="91.3115%" y="436" width="1.1862%" height="15" fill="rgb(250,110,10)" fg:x="132787" fg:w="1725"/><text x="91.5615%" y="446.50"></text></g><g><title>is_true (z3/z3.py:1651) (1,714 samples, 1.18%)</title><rect x="91.3191%" y="452" width="1.1786%" height="15" fill="rgb(248,123,6)" fg:x="132798" fg:w="1714"/><text x="91.5691%" y="462.50"></text></g><g><title>is_app_of (z3/z3.py:1403) (1,679 samples, 1.15%)</title><rect x="91.3431%" y="468" width="1.1546%" height="15" fill="rgb(206,91,31)" fg:x="132833" fg:w="1679"/><text x="91.5931%" y="478.50"></text></g><g><title>kind (z3/z3.py:1080) (687 samples, 0.47%)</title><rect x="92.0253%" y="484" width="0.4724%" height="15" fill="rgb(211,154,13)" fg:x="133825" fg:w="687"/><text x="92.2753%" y="494.50"></text></g><g><title>is_app (z3/z3.py:1312) (308 samples, 0.21%)</title><rect x="92.5692%" y="484" width="0.2118%" height="15" fill="rgb(225,148,7)" fg:x="134616" fg:w="308"/><text x="92.8192%" y="494.50"></text></g><g><title>_ast_kind (z3/z3.py:494) (232 samples, 0.16%)</title><rect x="92.6215%" y="500" width="0.1595%" height="15" fill="rgb(220,160,43)" fg:x="134692" fg:w="232"/><text x="92.8715%" y="510.50"></text></g><g><title>is_app (z3/z3.py:1312) (364 samples, 0.25%)</title><rect x="92.8532%" y="500" width="0.2503%" height="15" fill="rgb(213,52,39)" fg:x="135029" fg:w="364"/><text x="93.1032%" y="510.50"></text></g><g><title>_ast_kind (z3/z3.py:494) (298 samples, 0.20%)</title><rect x="92.8986%" y="516" width="0.2049%" height="15" fill="rgb(243,137,7)" fg:x="135095" fg:w="298"/><text x="93.1486%" y="526.50"></text></g><g><title>kind (z3/z3.py:1079) (437 samples, 0.30%)</title><rect x="92.8106%" y="484" width="0.3005%" height="15" fill="rgb(230,79,13)" fg:x="134967" fg:w="437"/><text x="93.0606%" y="494.50"></text></g><g><title>compute_hm_ (h2propagator.py:183) (3,158 samples, 2.17%)</title><rect x="91.2730%" y="404" width="2.1716%" height="15" fill="rgb(247,105,23)" fg:x="132731" fg:w="3158"/><text x="91.5230%" y="414.50">c..</text></g><g><title>&lt;listcomp&gt; (h2propagator.py:183) (3,150 samples, 2.17%)</title><rect x="91.2785%" y="420" width="2.1661%" height="15" fill="rgb(223,179,41)" fg:x="132739" fg:w="3150"/><text x="91.5285%" y="430.50">&lt;..</text></g><g><title>__bool__ (z3/z3.py:376) (1,377 samples, 0.95%)</title><rect x="92.4977%" y="436" width="0.9469%" height="15" fill="rgb(218,9,34)" fg:x="134512" fg:w="1377"/><text x="92.7477%" y="446.50"></text></g><g><title>is_false (z3/z3.py:1665) (1,362 samples, 0.94%)</title><rect x="92.5080%" y="452" width="0.9366%" height="15" fill="rgb(222,106,8)" fg:x="134527" fg:w="1362"/><text x="92.7580%" y="462.50"></text></g><g><title>is_app_of (z3/z3.py:1403) (1,337 samples, 0.92%)</title><rect x="92.5252%" y="468" width="0.9194%" height="15" fill="rgb(211,220,0)" fg:x="134552" fg:w="1337"/><text x="92.7752%" y="478.50"></text></g><g><title>kind (z3/z3.py:1080) (485 samples, 0.33%)</title><rect x="93.1111%" y="484" width="0.3335%" height="15" fill="rgb(229,52,16)" fg:x="135404" fg:w="485"/><text x="93.3611%" y="494.50"></text></g><g><title>compute_hm_ (h2propagator.py:193) (248 samples, 0.17%)</title><rect x="93.4453%" y="404" width="0.1705%" height="15" fill="rgb(212,155,18)" fg:x="135890" fg:w="248"/><text x="93.6953%" y="414.50"></text></g><g><title>is_app (z3/z3.py:1312) (170 samples, 0.12%)</title><rect x="93.7905%" y="500" width="0.1169%" height="15" fill="rgb(242,21,14)" fg:x="136392" fg:w="170"/><text x="94.0405%" y="510.50"></text></g><g><title>is_app (z3/z3.py:1312) (166 samples, 0.11%)</title><rect x="93.9349%" y="516" width="0.1142%" height="15" fill="rgb(222,19,48)" fg:x="136602" fg:w="166"/><text x="94.1849%" y="526.50"></text></g><g><title>kind (z3/z3.py:1079) (199 samples, 0.14%)</title><rect x="93.9163%" y="500" width="0.1368%" height="15" fill="rgb(232,45,27)" fg:x="136575" fg:w="199"/><text x="94.1663%" y="510.50"></text></g><g><title>__bool__ (z3/z3.py:374) (759 samples, 0.52%)</title><rect x="93.7465%" y="452" width="0.5219%" height="15" fill="rgb(249,103,42)" fg:x="136328" fg:w="759"/><text x="93.9965%" y="462.50"></text></g><g><title>is_true (z3/z3.py:1651) (744 samples, 0.51%)</title><rect x="93.7568%" y="468" width="0.5116%" height="15" fill="rgb(246,81,33)" fg:x="136343" fg:w="744"/><text x="94.0068%" y="478.50"></text></g><g><title>is_app_of (z3/z3.py:1403) (728 samples, 0.50%)</title><rect x="93.7678%" y="484" width="0.5006%" height="15" fill="rgb(252,33,42)" fg:x="136359" fg:w="728"/><text x="94.0178%" y="494.50"></text></g><g><title>kind (z3/z3.py:1080) (313 samples, 0.22%)</title><rect x="94.0532%" y="500" width="0.2152%" height="15" fill="rgb(209,212,41)" fg:x="136774" fg:w="313"/><text x="94.3032%" y="510.50"></text></g><g><title>is_app (z3/z3.py:1312) (159 samples, 0.11%)</title><rect x="94.4321%" y="516" width="0.1093%" height="15" fill="rgb(207,154,6)" fg:x="137325" fg:w="159"/><text x="94.6821%" y="526.50"></text></g><g><title>kind (z3/z3.py:1079) (197 samples, 0.14%)</title><rect x="94.4121%" y="500" width="0.1355%" height="15" fill="rgb(223,64,47)" fg:x="137296" fg:w="197"/><text x="94.6621%" y="510.50"></text></g><g><title>__bool__ (z3/z3.py:376) (627 samples, 0.43%)</title><rect x="94.2684%" y="452" width="0.4312%" height="15" fill="rgb(211,161,38)" fg:x="137087" fg:w="627"/><text x="94.5184%" y="462.50"></text></g><g><title>is_false (z3/z3.py:1665) (614 samples, 0.42%)</title><rect x="94.2773%" y="468" width="0.4222%" height="15" fill="rgb(219,138,40)" fg:x="137100" fg:w="614"/><text x="94.5273%" y="478.50"></text></g><g><title>is_app_of (z3/z3.py:1403) (605 samples, 0.42%)</title><rect x="94.2835%" y="484" width="0.4160%" height="15" fill="rgb(241,228,46)" fg:x="137109" fg:w="605"/><text x="94.5335%" y="494.50"></text></g><g><title>kind (z3/z3.py:1080) (221 samples, 0.15%)</title><rect x="94.5476%" y="500" width="0.1520%" height="15" fill="rgb(223,209,38)" fg:x="137493" fg:w="221"/><text x="94.7976%" y="510.50"></text></g><g><title>compute_hm_ (h2propagator.py:183) (1,425 samples, 0.98%)</title><rect x="93.7203%" y="420" width="0.9799%" height="15" fill="rgb(236,164,45)" fg:x="136290" fg:w="1425"/><text x="93.9703%" y="430.50"></text></g><g><title>&lt;listcomp&gt; (h2propagator.py:183) (1,423 samples, 0.98%)</title><rect x="93.7217%" y="436" width="0.9785%" height="15" fill="rgb(231,15,5)" fg:x="136292" fg:w="1423"/><text x="93.9717%" y="446.50"></text></g><g><title>__hash__ (unified_planning/model/action.py:229) (559 samples, 0.38%)</title><rect x="94.8784%" y="436" width="0.3844%" height="15" fill="rgb(252,35,15)" fg:x="137974" fg:w="559"/><text x="95.1284%" y="446.50"></text></g><g><title>__hash__ (unified_planning/model/action.py:229) (267 samples, 0.18%)</title><rect x="95.3687%" y="452" width="0.1836%" height="15" fill="rgb(248,181,18)" fg:x="138687" fg:w="267"/><text x="95.6187%" y="462.50"></text></g><g><title>regression (h2propagator.py:169) (467 samples, 0.32%)</title><rect x="95.2786%" y="436" width="0.3211%" height="15" fill="rgb(233,39,42)" fg:x="138556" fg:w="467"/><text x="95.5286%" y="446.50"></text></g><g><title>compute_hm_ (h2propagator.py:193) (1,398 samples, 0.96%)</title><rect x="94.7030%" y="420" width="0.9613%" height="15" fill="rgb(238,110,33)" fg:x="137719" fg:w="1398"/><text x="94.9530%" y="430.50"></text></g><g><title>is_app (z3/z3.py:1312) (260 samples, 0.18%)</title><rect x="95.7338%" y="516" width="0.1788%" height="15" fill="rgb(233,195,10)" fg:x="139218" fg:w="260"/><text x="95.9838%" y="526.50"></text></g><g><title>_ast_kind (z3/z3.py:494) (199 samples, 0.14%)</title><rect x="95.7757%" y="532" width="0.1368%" height="15" fill="rgb(254,105,3)" fg:x="139279" fg:w="199"/><text x="96.0257%" y="542.50"></text></g><g><title>is_app (z3/z3.py:1312) (262 samples, 0.18%)</title><rect x="95.9477%" y="532" width="0.1802%" height="15" fill="rgb(221,225,9)" fg:x="139529" fg:w="262"/><text x="96.1977%" y="542.50"></text></g><g><title>_ast_kind (z3/z3.py:494) (203 samples, 0.14%)</title><rect x="95.9882%" y="548" width="0.1396%" height="15" fill="rgb(224,227,45)" fg:x="139588" fg:w="203"/><text x="96.2382%" y="558.50"></text></g><g><title>kind (z3/z3.py:1079) (303 samples, 0.21%)</title><rect x="95.9291%" y="516" width="0.2084%" height="15" fill="rgb(229,198,43)" fg:x="139502" fg:w="303"/><text x="96.1791%" y="526.50"></text></g><g><title>__bool__ (z3/z3.py:374) (998 samples, 0.69%)</title><rect x="95.6898%" y="468" width="0.6863%" height="15" fill="rgb(206,209,35)" fg:x="139154" fg:w="998"/><text x="95.9398%" y="478.50"></text></g><g><title>is_true (z3/z3.py:1651) (984 samples, 0.68%)</title><rect x="95.6994%" y="484" width="0.6767%" height="15" fill="rgb(245,195,53)" fg:x="139168" fg:w="984"/><text x="95.9494%" y="494.50"></text></g><g><title>is_app_of (z3/z3.py:1403) (967 samples, 0.66%)</title><rect x="95.7111%" y="500" width="0.6650%" height="15" fill="rgb(240,92,26)" fg:x="139185" fg:w="967"/><text x="95.9611%" y="510.50"></text></g><g><title>kind (z3/z3.py:1080) (347 samples, 0.24%)</title><rect x="96.1374%" y="516" width="0.2386%" height="15" fill="rgb(207,40,23)" fg:x="139805" fg:w="347"/><text x="96.3874%" y="526.50"></text></g><g><title>is_app (z3/z3.py:1312) (161 samples, 0.11%)</title><rect x="96.4180%" y="516" width="0.1107%" height="15" fill="rgb(223,111,35)" fg:x="140213" fg:w="161"/><text x="96.6680%" y="526.50"></text></g><g><title>is_app (z3/z3.py:1312) (181 samples, 0.12%)</title><rect x="96.5610%" y="532" width="0.1245%" height="15" fill="rgb(229,147,28)" fg:x="140421" fg:w="181"/><text x="96.8110%" y="542.50"></text></g><g><title>_ast_kind (z3/z3.py:494) (147 samples, 0.10%)</title><rect x="96.5844%" y="548" width="0.1011%" height="15" fill="rgb(211,29,28)" fg:x="140455" fg:w="147"/><text x="96.8344%" y="558.50"></text></g><g><title>kind (z3/z3.py:1079) (224 samples, 0.15%)</title><rect x="96.5377%" y="516" width="0.1540%" height="15" fill="rgb(228,72,33)" fg:x="140387" fg:w="224"/><text x="96.7877%" y="526.50"></text></g><g><title>compute_hm_ (h2propagator.py:183) (1,749 samples, 1.20%)</title><rect x="95.6657%" y="436" width="1.2027%" height="15" fill="rgb(205,214,31)" fg:x="139119" fg:w="1749"/><text x="95.9157%" y="446.50"></text></g><g><title>&lt;listcomp&gt; (h2propagator.py:183) (1,748 samples, 1.20%)</title><rect x="95.6664%" y="452" width="1.2020%" height="15" fill="rgb(224,111,15)" fg:x="139120" fg:w="1748"/><text x="95.9164%" y="462.50"></text></g><g><title>__bool__ (z3/z3.py:376) (716 samples, 0.49%)</title><rect x="96.3761%" y="468" width="0.4924%" height="15" fill="rgb(253,21,26)" fg:x="140152" fg:w="716"/><text x="96.6261%" y="478.50"></text></g><g><title>is_false (z3/z3.py:1665) (708 samples, 0.49%)</title><rect x="96.3816%" y="484" width="0.4869%" height="15" fill="rgb(245,139,43)" fg:x="140160" fg:w="708"/><text x="96.6316%" y="494.50"></text></g><g><title>is_app_of (z3/z3.py:1403) (687 samples, 0.47%)</title><rect x="96.3960%" y="500" width="0.4724%" height="15" fill="rgb(252,170,7)" fg:x="140181" fg:w="687"/><text x="96.6460%" y="510.50"></text></g><g><title>kind (z3/z3.py:1080) (257 samples, 0.18%)</title><rect x="96.6917%" y="516" width="0.1767%" height="15" fill="rgb(231,118,14)" fg:x="140611" fg:w="257"/><text x="96.9417%" y="526.50"></text></g><g><title>compute_hm_ (h2propagator.py:193) (159 samples, 0.11%)</title><rect x="96.8705%" y="436" width="0.1093%" height="15" fill="rgb(238,83,0)" fg:x="140871" fg:w="159"/><text x="97.1205%" y="446.50"></text></g><g><title>__bool__ (z3/z3.py:374) (393 samples, 0.27%)</title><rect x="97.0410%" y="484" width="0.2702%" height="15" fill="rgb(221,39,39)" fg:x="141119" fg:w="393"/><text x="97.2910%" y="494.50"></text></g><g><title>is_true (z3/z3.py:1651) (383 samples, 0.26%)</title><rect x="97.0479%" y="500" width="0.2634%" height="15" fill="rgb(222,119,46)" fg:x="141129" fg:w="383"/><text x="97.2979%" y="510.50"></text></g><g><title>is_app_of (z3/z3.py:1403) (378 samples, 0.26%)</title><rect x="97.0513%" y="516" width="0.2599%" height="15" fill="rgb(222,165,49)" fg:x="141134" fg:w="378"/><text x="97.3013%" y="526.50"></text></g><g><title>compute_hm_ (h2propagator.py:183) (738 samples, 0.51%)</title><rect x="97.0266%" y="452" width="0.5075%" height="15" fill="rgb(219,113,52)" fg:x="141098" fg:w="738"/><text x="97.2766%" y="462.50"></text></g><g><title>&lt;listcomp&gt; (h2propagator.py:183) (735 samples, 0.51%)</title><rect x="97.0286%" y="468" width="0.5054%" height="15" fill="rgb(214,7,15)" fg:x="141101" fg:w="735"/><text x="97.2786%" y="478.50"></text></g><g><title>__bool__ (z3/z3.py:376) (324 samples, 0.22%)</title><rect x="97.3113%" y="484" width="0.2228%" height="15" fill="rgb(235,32,4)" fg:x="141512" fg:w="324"/><text x="97.5613%" y="494.50"></text></g><g><title>is_false (z3/z3.py:1665) (323 samples, 0.22%)</title><rect x="97.3120%" y="500" width="0.2221%" height="15" fill="rgb(238,90,54)" fg:x="141513" fg:w="323"/><text x="97.5620%" y="510.50"></text></g><g><title>is_app_of (z3/z3.py:1403) (321 samples, 0.22%)</title><rect x="97.3133%" y="516" width="0.2207%" height="15" fill="rgb(213,208,19)" fg:x="141515" fg:w="321"/><text x="97.5633%" y="526.50"></text></g><g><title>__hash__ (unified_planning/model/action.py:229) (311 samples, 0.21%)</title><rect x="97.6420%" y="468" width="0.2139%" height="15" fill="rgb(233,156,4)" fg:x="141993" fg:w="311"/><text x="97.8920%" y="478.50"></text></g><g><title>__hash__ (unified_planning/model/action.py:229) (197 samples, 0.14%)</title><rect x="97.9336%" y="484" width="0.1355%" height="15" fill="rgb(207,194,5)" fg:x="142417" fg:w="197"/><text x="98.1836%" y="494.50"></text></g><g><title>regression (h2propagator.py:169) (354 samples, 0.24%)</title><rect x="97.8655%" y="468" width="0.2434%" height="15" fill="rgb(206,111,30)" fg:x="142318" fg:w="354"/><text x="98.1155%" y="478.50"></text></g><g><title>compute_hm_ (h2propagator.py:193) (900 samples, 0.62%)</title><rect x="97.5341%" y="452" width="0.6189%" height="15" fill="rgb(243,70,54)" fg:x="141836" fg:w="900"/><text x="97.7841%" y="462.50"></text></g><g><title>__bool__ (z3/z3.py:374) (369 samples, 0.25%)</title><rect x="98.1688%" y="500" width="0.2537%" height="15" fill="rgb(242,28,8)" fg:x="142759" fg:w="369"/><text x="98.4188%" y="510.50"></text></g><g><title>is_true (z3/z3.py:1651) (364 samples, 0.25%)</title><rect x="98.1722%" y="516" width="0.2503%" height="15" fill="rgb(219,106,18)" fg:x="142764" fg:w="364"/><text x="98.4222%" y="526.50"></text></g><g><title>is_app_of (z3/z3.py:1403) (360 samples, 0.25%)</title><rect x="98.1750%" y="532" width="0.2476%" height="15" fill="rgb(244,222,10)" fg:x="142768" fg:w="360"/><text x="98.4250%" y="542.50"></text></g><g><title>compute_hm_ (h2propagator.py:183) (684 samples, 0.47%)</title><rect x="98.1550%" y="468" width="0.4704%" height="15" fill="rgb(236,179,52)" fg:x="142739" fg:w="684"/><text x="98.4050%" y="478.50"></text></g><g><title>&lt;listcomp&gt; (h2propagator.py:183) (683 samples, 0.47%)</title><rect x="98.1557%" y="484" width="0.4697%" height="15" fill="rgb(213,23,39)" fg:x="142740" fg:w="683"/><text x="98.4057%" y="494.50"></text></g><g><title>__bool__ (z3/z3.py:376) (295 samples, 0.20%)</title><rect x="98.4225%" y="500" width="0.2029%" height="15" fill="rgb(238,48,10)" fg:x="143128" fg:w="295"/><text x="98.6725%" y="510.50"></text></g><g><title>is_false (z3/z3.py:1665) (289 samples, 0.20%)</title><rect x="98.4266%" y="516" width="0.1987%" height="15" fill="rgb(251,196,23)" fg:x="143134" fg:w="289"/><text x="98.6766%" y="526.50"></text></g><g><title>is_app_of (z3/z3.py:1403) (285 samples, 0.20%)</title><rect x="98.4294%" y="532" width="0.1960%" height="15" fill="rgb(250,152,24)" fg:x="143138" fg:w="285"/><text x="98.6794%" y="542.50"></text></g><g><title>compute_hm_ (h2propagator.py:183) (204 samples, 0.14%)</title><rect x="98.6625%" y="484" width="0.1403%" height="15" fill="rgb(209,150,17)" fg:x="143477" fg:w="204"/><text x="98.9125%" y="494.50"></text></g><g><title>&lt;listcomp&gt; (h2propagator.py:183) (204 samples, 0.14%)</title><rect x="98.6625%" y="500" width="0.1403%" height="15" fill="rgb(234,202,34)" fg:x="143477" fg:w="204"/><text x="98.9125%" y="510.50"></text></g><g><title>compute_hm_ (h2propagator.py:193) (228 samples, 0.16%)</title><rect x="98.8035%" y="484" width="0.1568%" height="15" fill="rgb(253,148,53)" fg:x="143682" fg:w="228"/><text x="99.0535%" y="494.50"></text></g><g><title>compute_hm_ (h2propagator.py:207) (435 samples, 0.30%)</title><rect x="98.6625%" y="468" width="0.2991%" height="15" fill="rgb(218,129,16)" fg:x="143477" fg:w="435"/><text x="98.9125%" y="478.50"></text></g><g><title>compute_hm_ (h2propagator.py:207) (7,631 samples, 5.25%)</title><rect x="93.7155%" y="404" width="5.2475%" height="15" fill="rgb(216,85,19)" fg:x="136283" fg:w="7631"/><text x="93.9655%" y="414.50">comput..</text></g><g><title>compute_hm_ (h2propagator.py:198) (4,796 samples, 3.30%)</title><rect x="95.6650%" y="420" width="3.2980%" height="15" fill="rgb(235,228,7)" fg:x="139118" fg:w="4796"/><text x="95.9150%" y="430.50">com..</text></g><g><title>compute_hm_ (h2propagator.py:207) (2,823 samples, 1.94%)</title><rect x="97.0218%" y="436" width="1.9412%" height="15" fill="rgb(245,175,0)" fg:x="141091" fg:w="2823"/><text x="97.2718%" y="446.50">c..</text></g><g><title>compute_hm_ (h2propagator.py:198) (1,177 samples, 0.81%)</title><rect x="98.1536%" y="452" width="0.8094%" height="15" fill="rgb(208,168,36)" fg:x="142737" fg:w="1177"/><text x="98.4036%" y="462.50"></text></g><g><title>compute_hm_ (h2propagator.py:198) (23,622 samples, 16.24%)</title><rect x="82.7206%" y="356" width="16.2438%" height="15" fill="rgb(246,171,24)" fg:x="120294" fg:w="23622"/><text x="82.9706%" y="366.50">compute_hm_ (h2propagator..</text></g><g><title>compute_hm_ (h2propagator.py:207) (16,598 samples, 11.41%)</title><rect x="87.5507%" y="372" width="11.4137%" height="15" fill="rgb(215,142,24)" fg:x="127318" fg:w="16598"/><text x="87.8007%" y="382.50">compute_hm_ (h2pr..</text></g><g><title>compute_hm_ (h2propagator.py:198) (11,188 samples, 7.69%)</title><rect x="91.2709%" y="388" width="7.6935%" height="15" fill="rgb(250,187,7)" fg:x="132728" fg:w="11188"/><text x="91.5209%" y="398.50">compute_hm_..</text></g><g><title>compute_hm_ (h2propagator.py:207) (63,211 samples, 43.47%)</title><rect x="55.4978%" y="340" width="43.4673%" height="15" fill="rgb(228,66,33)" fg:x="80706" fg:w="63211"/><text x="55.7478%" y="350.50">compute_hm_ (h2propagator.py:207)</text></g><g><title>compute_hm_ (h2propagator.py:198) (94,217 samples, 64.79%)</title><rect x="34.1915%" y="324" width="64.7887%" height="15" fill="rgb(234,215,21)" fg:x="49722" fg:w="94217"/><text x="34.4415%" y="334.50">compute_hm_ (h2propagator.py:198)</text></g><g><title>compute_hm_ (h2propagator.py:207) (121,630 samples, 83.64%)</title><rect x="15.3422%" y="308" width="83.6393%" height="15" fill="rgb(222,191,20)" fg:x="22311" fg:w="121630"/><text x="15.5922%" y="318.50">compute_hm_ (h2propagator.py:207)</text></g><g><title>compute_hm_ (h2propagator.py:198) (129,680 samples, 89.17%)</title><rect x="9.8080%" y="292" width="89.1750%" height="15" fill="rgb(245,79,54)" fg:x="14263" fg:w="129680"/><text x="10.0580%" y="302.50">compute_hm_ (h2propagator.py:198)</text></g><g><title>compute_hm_ (h2propagator.py:207) (137,072 samples, 94.26%)</title><rect x="4.7262%" y="276" width="94.2581%" height="15" fill="rgb(240,10,37)" fg:x="6873" fg:w="137072"/><text x="4.9762%" y="286.50">compute_hm_ (h2propagator.py:207)</text></g><g><title>_fixed (h2propagator.py:130) (138,007 samples, 94.90%)</title><rect x="4.0854%" y="228" width="94.9010%" height="15" fill="rgb(214,192,32)" fg:x="5941" fg:w="138007"/><text x="4.3354%" y="238.50">_fixed (h2propagator.py:130)</text></g><g><title>compute_heuristic (h2propagator.py:162) (138,007 samples, 94.90%)</title><rect x="4.0854%" y="244" width="94.9010%" height="15" fill="rgb(209,36,54)" fg:x="5941" fg:w="138007"/><text x="4.3354%" y="254.50">compute_heuristic (h2propagator.py:162)</text></g><g><title>compute_hm (h2propagator.py:213) (137,987 samples, 94.89%)</title><rect x="4.0991%" y="260" width="94.8873%" height="15" fill="rgb(220,10,11)" fg:x="5961" fg:w="137987"/><text x="4.3491%" y="270.50">compute_hm (h2propagator.py:213)</text></g><g><title>user_prop_fixed (z3/z3.py:11627) (142,072 samples, 97.70%)</title><rect x="1.3677%" y="196" width="97.6964%" height="15" fill="rgb(221,106,17)" fg:x="1989" fg:w="142072"/><text x="1.6177%" y="206.50">user_prop_fixed (z3/z3.py:11627)</text></g><g><title>&lt;lambda&gt; (h2propagator.py:39) (142,064 samples, 97.69%)</title><rect x="1.3732%" y="212" width="97.6909%" height="15" fill="rgb(251,142,44)" fg:x="1997" fg:w="142064"/><text x="1.6232%" y="222.50">&lt;lambda&gt; (h2propagator.py:39)</text></g><g><title>__bool__ (z3/z3.py:379) (276 samples, 0.19%)</title><rect x="99.2340%" y="228" width="0.1898%" height="15" fill="rgb(238,13,15)" fg:x="144308" fg:w="276"/><text x="99.4840%" y="238.50"></text></g><g><title>__eq__ (z3/z3.py:1033) (437 samples, 0.30%)</title><rect x="99.4320%" y="228" width="0.3005%" height="15" fill="rgb(208,107,27)" fg:x="144596" fg:w="437"/><text x="99.6820%" y="238.50"></text></g><g><title>__call__ (z3/z3printer.py:1346) (216 samples, 0.15%)</title><rect x="99.8095%" y="276" width="0.1485%" height="15" fill="rgb(205,136,37)" fg:x="145145" fg:w="216"/><text x="100.0595%" y="286.50"></text></g><g><title>main (z3/z3printer.py:1320) (215 samples, 0.15%)</title><rect x="99.8102%" y="292" width="0.1478%" height="15" fill="rgb(250,205,27)" fg:x="145146" fg:w="215"/><text x="100.0602%" y="302.50"></text></g><g><title>pp_expr (z3/z3printer.py:1217) (188 samples, 0.13%)</title><rect x="99.8288%" y="308" width="0.1293%" height="15" fill="rgb(210,80,43)" fg:x="145173" fg:w="188"/><text x="100.0788%" y="318.50"></text></g><g><title>obj_to_string (z3/z3printer.py:1455) (237 samples, 0.16%)</title><rect x="99.8061%" y="260" width="0.1630%" height="15" fill="rgb(247,160,36)" fg:x="145140" fg:w="237"/><text x="100.0561%" y="270.50"></text></g><g><title>var_components (pyPMT/pypmt/encoders/utilities.py:38) (238 samples, 0.16%)</title><rect x="99.8061%" y="228" width="0.1637%" height="15" fill="rgb(234,13,49)" fg:x="145140" fg:w="238"/><text x="100.0561%" y="238.50"></text></g><g><title>__str__ (z3/z3.py:359) (238 samples, 0.16%)</title><rect x="99.8061%" y="244" width="0.1637%" height="15" fill="rgb(234,122,0)" fg:x="145140" fg:w="238"/><text x="100.0561%" y="254.50"></text></g><g><title>pop (h2propagator.py:106) (1,299 samples, 0.89%)</title><rect x="99.0806%" y="212" width="0.8933%" height="15" fill="rgb(207,146,38)" fg:x="144085" fg:w="1299"/><text x="99.3306%" y="222.50"></text></g><g><title>user_prop_pop (z3/z3.py:11604) (1,352 samples, 0.93%)</title><rect x="99.0682%" y="196" width="0.9297%" height="15" fill="rgb(207,177,25)" fg:x="144067" fg:w="1352"/><text x="99.3182%" y="206.50"></text></g><g><title>search (pyPMT/pypmt/planner/SMTStateAndActionPropagator.py:90) (145,249 samples, 99.88%)</title><rect x="0.1183%" y="148" width="99.8810%" height="15" fill="rgb(211,178,42)" fg:x="172" fg:w="145249"/><text x="0.3683%" y="158.50">search (pyPMT/pypmt/planner/SMTStateAndActionPropagator.py:90)</text></g><g><title>check (z3/z3.py:7181) (145,249 samples, 99.88%)</title><rect x="0.1183%" y="164" width="99.8810%" height="15" fill="rgb(230,69,54)" fg:x="172" fg:w="145249"/><text x="0.3683%" y="174.50">check (z3/z3.py:7181)</text></g><g><title>Z3_solver_check_assumptions (z3/z3core.py:4276) (145,249 samples, 99.88%)</title><rect x="0.1183%" y="180" width="99.8810%" height="15" fill="rgb(214,135,41)" fg:x="172" fg:w="145249"/><text x="0.3683%" y="190.50">Z3_solver_check_assumptions (z3/z3core.py:4276)</text></g><g><title>all (145,422 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(237,67,25)" fg:x="0" fg:w="145422"/><text x="0.2500%" y="62.50"></text></g><g><title>&lt;module&gt; (pypmtcli:8) (145,329 samples, 99.94%)</title><rect x="0.0640%" y="68" width="99.9360%" height="15" fill="rgb(222,189,50)" fg:x="93" fg:w="145329"/><text x="0.3140%" y="78.50">&lt;module&gt; (pypmtcli:8)</text></g><g><title>main (pyPMT/pypmt/pypmtcli.py:147) (145,329 samples, 99.94%)</title><rect x="0.0640%" y="84" width="99.9360%" height="15" fill="rgb(245,148,34)" fg:x="93" fg:w="145329"/><text x="0.3140%" y="94.50">main (pyPMT/pypmt/pypmtcli.py:147)</text></g><g><title>solve_problem (pyPMT/pypmt/pypmtcli.py:122) (145,329 samples, 99.94%)</title><rect x="0.0640%" y="100" width="99.9360%" height="15" fill="rgb(222,29,6)" fg:x="93" fg:w="145329"/><text x="0.3140%" y="110.50">solve_problem (pyPMT/pypmt/pypmtcli.py:122)</text></g><g><title>solveFile (pyPMT/pypmt/apis.py:102) (145,321 samples, 99.93%)</title><rect x="0.0695%" y="116" width="99.9305%" height="15" fill="rgb(221,189,43)" fg:x="101" fg:w="145321"/><text x="0.3195%" y="126.50">solveFile (pyPMT/pypmt/apis.py:102)</text></g><g><title>solveUP (pyPMT/pypmt/apis.py:127) (145,311 samples, 99.92%)</title><rect x="0.0763%" y="132" width="99.9237%" height="15" fill="rgb(207,36,27)" fg:x="111" fg:w="145311"/><text x="0.3263%" y="142.50">solveUP (pyPMT/pypmt/apis.py:127)</text></g></svg></svg>